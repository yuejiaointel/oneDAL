<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classoneapi_1_1dal_1_1kmeans_1_1test_1_1kmeans__test" kind="class" language="C++" prot="public">
    <compoundname>oneapi::dal::kmeans::test::kmeans_test</compoundname>
    <basecompoundref refid="classoneapi_1_1dal_1_1test_1_1engine_1_1crtp__algo__fixture" prot="public" virt="non-virtual">oneapi::dal::test::engine::crtp_algo_fixture&lt; TestType, Derived &gt;</basecompoundref>
    <templateparamlist>
      <param>
        <type>typename TestType</type>
      </param>
      <param>
        <type>typename Derived</type>
      </param>
    </templateparamlist>
    <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classoneapi_1_1dal_1_1kmeans_1_1test_1_1kmeans__test_1ad8e497c0a637020e38f23327009fa9b2" prot="public" static="no">
        <type><ref refid="classoneapi_1_1dal_1_1test_1_1engine_1_1crtp__algo__fixture" kindref="compound">te::crtp_algo_fixture</ref>&lt; TestType, Derived &gt;</type>
        <definition>using base_t =  te::crtp_algo_fixture&lt;TestType, Derived&gt;</definition>
        <argsstring></argsstring>
        <name>base_t</name>
        <qualifiedname>oneapi::dal::kmeans::test::kmeans_test::base_t</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/oneDAL/oneDAL/cpp/oneapi/dal/algo/kmeans/test/fixture.hpp" line="44" column="5" bodyfile="/home/runner/work/oneDAL/oneDAL/cpp/oneapi/dal/algo/kmeans/test/fixture.hpp" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classoneapi_1_1dal_1_1kmeans_1_1test_1_1kmeans__test_1ac326cc316db45ea7e8a439c7b06c4cb1" prot="public" static="no">
        <type>std::tuple_element_t&lt; 0, TestType &gt;</type>
        <definition>using float_t =  std::tuple_element_t&lt;0, TestType&gt;</definition>
        <argsstring></argsstring>
        <name>float_t</name>
        <qualifiedname>oneapi::dal::kmeans::test::kmeans_test::float_t</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/oneDAL/oneDAL/cpp/oneapi/dal/algo/kmeans/test/fixture.hpp" line="45" column="5" bodyfile="/home/runner/work/oneDAL/oneDAL/cpp/oneapi/dal/algo/kmeans/test/fixture.hpp" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classoneapi_1_1dal_1_1kmeans_1_1test_1_1kmeans__test_1a8f837853131c68aace349d86d5190e55" prot="public" static="no">
        <type>std::tuple_element_t&lt; 1, TestType &gt;</type>
        <definition>using method_t =  std::tuple_element_t&lt;1, TestType&gt;</definition>
        <argsstring></argsstring>
        <name>method_t</name>
        <qualifiedname>oneapi::dal::kmeans::test::kmeans_test::method_t</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/oneDAL/oneDAL/cpp/oneapi/dal/algo/kmeans/test/fixture.hpp" line="46" column="5" bodyfile="/home/runner/work/oneDAL/oneDAL/cpp/oneapi/dal/algo/kmeans/test/fixture.hpp" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classoneapi_1_1dal_1_1kmeans_1_1test_1_1kmeans__test_1a63690220c0f3e9216358fa69d8ccba82" prot="public" static="no">
        <type><ref refid="structoneapi_1_1dal_1_1kmeans_1_1task_1_1v1_1_1clustering" kindref="compound">kmeans::task::clustering</ref></type>
        <definition>using task_t =  kmeans::task::clustering</definition>
        <argsstring></argsstring>
        <name>task_t</name>
        <qualifiedname>oneapi::dal::kmeans::test::kmeans_test::task_t</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/oneDAL/oneDAL/cpp/oneapi/dal/algo/kmeans/test/fixture.hpp" line="47" column="5" bodyfile="/home/runner/work/oneDAL/oneDAL/cpp/oneapi/dal/algo/kmeans/test/fixture.hpp" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classoneapi_1_1dal_1_1kmeans_1_1test_1_1kmeans__test_1ab3d720a1d69d12935d454e91ba37a86e" prot="public" static="no">
        <type>kmeans::descriptor&lt; float_t, method_t, <ref refid="structoneapi_1_1dal_1_1kmeans_1_1task_1_1v1_1_1clustering" kindref="compound">task_t</ref> &gt;</type>
        <definition>using descriptor_t =  kmeans::descriptor&lt;float_t, method_t, task_t&gt;</definition>
        <argsstring></argsstring>
        <name>descriptor_t</name>
        <qualifiedname>oneapi::dal::kmeans::test::kmeans_test::descriptor_t</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/oneDAL/oneDAL/cpp/oneapi/dal/algo/kmeans/test/fixture.hpp" line="48" column="5" bodyfile="/home/runner/work/oneDAL/oneDAL/cpp/oneapi/dal/algo/kmeans/test/fixture.hpp" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classoneapi_1_1dal_1_1kmeans_1_1test_1_1kmeans__test_1a91bf68c82b18a6c38b0dcb2b58089fd7" prot="public" static="no">
        <type><ref refid="classoneapi_1_1dal_1_1kmeans_1_1v1_1_1train__input" kindref="compound">kmeans::train_input</ref>&lt; <ref refid="structoneapi_1_1dal_1_1kmeans_1_1task_1_1v1_1_1clustering" kindref="compound">task_t</ref> &gt;</type>
        <definition>using train_input_t =  kmeans::train_input&lt;task_t&gt;</definition>
        <argsstring></argsstring>
        <name>train_input_t</name>
        <qualifiedname>oneapi::dal::kmeans::test::kmeans_test::train_input_t</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/oneDAL/oneDAL/cpp/oneapi/dal/algo/kmeans/test/fixture.hpp" line="49" column="5" bodyfile="/home/runner/work/oneDAL/oneDAL/cpp/oneapi/dal/algo/kmeans/test/fixture.hpp" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classoneapi_1_1dal_1_1kmeans_1_1test_1_1kmeans__test_1a6ce0fde48b499b78f942c5f8715e7d81" prot="public" static="no">
        <type><ref refid="classoneapi_1_1dal_1_1kmeans_1_1v1_1_1train__result" kindref="compound">kmeans::train_result</ref>&lt; <ref refid="structoneapi_1_1dal_1_1kmeans_1_1task_1_1v1_1_1clustering" kindref="compound">task_t</ref> &gt;</type>
        <definition>using train_result_t =  kmeans::train_result&lt;task_t&gt;</definition>
        <argsstring></argsstring>
        <name>train_result_t</name>
        <qualifiedname>oneapi::dal::kmeans::test::kmeans_test::train_result_t</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/oneDAL/oneDAL/cpp/oneapi/dal/algo/kmeans/test/fixture.hpp" line="50" column="5" bodyfile="/home/runner/work/oneDAL/oneDAL/cpp/oneapi/dal/algo/kmeans/test/fixture.hpp" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classoneapi_1_1dal_1_1kmeans_1_1test_1_1kmeans__test_1a5a86145c6a9d7e87a2fcc1efefb25097" prot="public" static="no">
        <type><ref refid="classoneapi_1_1dal_1_1kmeans_1_1v1_1_1infer__input" kindref="compound">kmeans::infer_input</ref>&lt; <ref refid="structoneapi_1_1dal_1_1kmeans_1_1task_1_1v1_1_1clustering" kindref="compound">task_t</ref> &gt;</type>
        <definition>using infer_input_t =  kmeans::infer_input&lt;task_t&gt;</definition>
        <argsstring></argsstring>
        <name>infer_input_t</name>
        <qualifiedname>oneapi::dal::kmeans::test::kmeans_test::infer_input_t</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/oneDAL/oneDAL/cpp/oneapi/dal/algo/kmeans/test/fixture.hpp" line="51" column="5" bodyfile="/home/runner/work/oneDAL/oneDAL/cpp/oneapi/dal/algo/kmeans/test/fixture.hpp" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classoneapi_1_1dal_1_1kmeans_1_1test_1_1kmeans__test_1ae17550e7bc92fce0d247786d1f648d31" prot="public" static="no">
        <type><ref refid="classoneapi_1_1dal_1_1kmeans_1_1v1_1_1infer__result" kindref="compound">kmeans::infer_result</ref>&lt; <ref refid="structoneapi_1_1dal_1_1kmeans_1_1task_1_1v1_1_1clustering" kindref="compound">task_t</ref> &gt;</type>
        <definition>using infer_result_t =  kmeans::infer_result&lt;task_t&gt;</definition>
        <argsstring></argsstring>
        <name>infer_result_t</name>
        <qualifiedname>oneapi::dal::kmeans::test::kmeans_test::infer_result_t</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/oneDAL/oneDAL/cpp/oneapi/dal/algo/kmeans/test/fixture.hpp" line="52" column="5" bodyfile="/home/runner/work/oneDAL/oneDAL/cpp/oneapi/dal/algo/kmeans/test/fixture.hpp" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classoneapi_1_1dal_1_1kmeans_1_1test_1_1kmeans__test_1a12e8a95f0ce94471ece5dd511264e37e" prot="public" static="no">
        <type>kmeans::model&lt; <ref refid="structoneapi_1_1dal_1_1kmeans_1_1task_1_1v1_1_1clustering" kindref="compound">task_t</ref> &gt;</type>
        <definition>using model_t =  kmeans::model&lt;task_t&gt;</definition>
        <argsstring></argsstring>
        <name>model_t</name>
        <qualifiedname>oneapi::dal::kmeans::test::kmeans_test::model_t</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/oneDAL/oneDAL/cpp/oneapi/dal/algo/kmeans/test/fixture.hpp" line="53" column="5" bodyfile="/home/runner/work/oneDAL/oneDAL/cpp/oneapi/dal/algo/kmeans/test/fixture.hpp" bodystart="53" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classoneapi_1_1dal_1_1kmeans_1_1test_1_1kmeans__test_1a7d58302320c7cac6f02cc384f8a0dc4b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>descriptor_t</type>
        <definition>descriptor_t get_descriptor</definition>
        <argsstring>(std::int64_t cluster_count, std::int64_t max_iteration_count, float_t accuracy_threshold) const</argsstring>
        <name>get_descriptor</name>
        <qualifiedname>oneapi::dal::kmeans::test::kmeans_test::get_descriptor</qualifiedname>
        <param>
          <type>std::int64_t</type>
          <declname>cluster_count</declname>
        </param>
        <param>
          <type>std::int64_t</type>
          <declname>max_iteration_count</declname>
        </param>
        <param>
          <type>float_t</type>
          <declname>accuracy_threshold</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/oneDAL/oneDAL/cpp/oneapi/dal/algo/kmeans/test/fixture.hpp" line="55" column="18" bodyfile="/home/runner/work/oneDAL/oneDAL/cpp/oneapi/dal/algo/kmeans/test/fixture.hpp" bodystart="55" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="classoneapi_1_1dal_1_1kmeans_1_1test_1_1kmeans__test_1adc997f4ff5c934ad649bbcc5380abf20" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>kmeans::descriptor&lt; float_t, <ref refid="structoneapi_1_1dal_1_1kmeans_1_1method_1_1v1_1_1lloyd__dense" kindref="compound">kmeans::method::lloyd_dense</ref>, <ref refid="structoneapi_1_1dal_1_1kmeans_1_1task_1_1v1_1_1clustering" kindref="compound">task_t</ref> &gt;</type>
        <definition>kmeans::descriptor&lt; float_t, kmeans::method::lloyd_dense, task_t &gt; get_dense_descriptor</definition>
        <argsstring>(std::int64_t cluster_count, std::int64_t max_iteration_count, float_t accuracy_threshold) const</argsstring>
        <name>get_dense_descriptor</name>
        <qualifiedname>oneapi::dal::kmeans::test::kmeans_test::get_dense_descriptor</qualifiedname>
        <param>
          <type>std::int64_t</type>
          <declname>cluster_count</declname>
        </param>
        <param>
          <type>std::int64_t</type>
          <declname>max_iteration_count</declname>
        </param>
        <param>
          <type>float_t</type>
          <declname>accuracy_threshold</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/oneDAL/oneDAL/cpp/oneapi/dal/algo/kmeans/test/fixture.hpp" line="64" column="24" bodyfile="/home/runner/work/oneDAL/oneDAL/cpp/oneapi/dal/algo/kmeans/test/fixture.hpp" bodystart="64" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="classoneapi_1_1dal_1_1kmeans_1_1test_1_1kmeans__test_1a5239ecbb8c721dbde022a56d02a3650c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>descriptor_t</type>
        <definition>descriptor_t get_descriptor</definition>
        <argsstring>(std::int64_t cluster_count) const</argsstring>
        <name>get_descriptor</name>
        <qualifiedname>oneapi::dal::kmeans::test::kmeans_test::get_descriptor</qualifiedname>
        <param>
          <type>std::int64_t</type>
          <declname>cluster_count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/oneDAL/oneDAL/cpp/oneapi/dal/algo/kmeans/test/fixture.hpp" line="74" column="18" bodyfile="/home/runner/work/oneDAL/oneDAL/cpp/oneapi/dal/algo/kmeans/test/fixture.hpp" bodystart="74" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="classoneapi_1_1dal_1_1kmeans_1_1test_1_1kmeans__test_1a9c6ac8460e05fe7cfa4fec7f2b7c8a63" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool is_sparse_method</definition>
        <argsstring>()</argsstring>
        <name>is_sparse_method</name>
        <qualifiedname>oneapi::dal::kmeans::test::kmeans_test::is_sparse_method</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/oneDAL/oneDAL/cpp/oneapi/dal/algo/kmeans/test/fixture.hpp" line="78" column="10" bodyfile="/home/runner/work/oneDAL/oneDAL/cpp/oneapi/dal/algo/kmeans/test/fixture.hpp" bodystart="78" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="classoneapi_1_1dal_1_1kmeans_1_1test_1_1kmeans__test_1a6d2e2d342bc45be32b5b1d17b33bbf73" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void exact_checks</definition>
        <argsstring>(const table &amp;data, const table &amp;initial_centroids, const table &amp;ref_centroids, const table &amp;ref_responses, std::int64_t cluster_count, std::int64_t max_iteration_count, float_t accuracy_threshold, float_t ref_objective_function=-1.0, bool test_convergence=false)</argsstring>
        <name>exact_checks</name>
        <qualifiedname>oneapi::dal::kmeans::test::kmeans_test::exact_checks</qualifiedname>
        <param>
          <type>const <ref refid="classoneapi_1_1dal_1_1v1_1_1table" kindref="compound">table</ref> &amp;</type>
          <declname>data</declname>
        </param>
        <param>
          <type>const <ref refid="classoneapi_1_1dal_1_1v1_1_1table" kindref="compound">table</ref> &amp;</type>
          <declname>initial_centroids</declname>
        </param>
        <param>
          <type>const <ref refid="classoneapi_1_1dal_1_1v1_1_1table" kindref="compound">table</ref> &amp;</type>
          <declname>ref_centroids</declname>
        </param>
        <param>
          <type>const <ref refid="classoneapi_1_1dal_1_1v1_1_1table" kindref="compound">table</ref> &amp;</type>
          <declname>ref_responses</declname>
        </param>
        <param>
          <type>std::int64_t</type>
          <declname>cluster_count</declname>
        </param>
        <param>
          <type>std::int64_t</type>
          <declname>max_iteration_count</declname>
        </param>
        <param>
          <type>float_t</type>
          <declname>accuracy_threshold</declname>
        </param>
        <param>
          <type>float_t</type>
          <declname>ref_objective_function</declname>
          <defval>-1.0</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>test_convergence</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/oneDAL/oneDAL/cpp/oneapi/dal/algo/kmeans/test/fixture.hpp" line="82" column="10" bodyfile="/home/runner/work/oneDAL/oneDAL/cpp/oneapi/dal/algo/kmeans/test/fixture.hpp" bodystart="82" bodyend="112"/>
      </memberdef>
      <memberdef kind="function" id="classoneapi_1_1dal_1_1kmeans_1_1test_1_1kmeans__test_1a40418f0be409e8f2d1bb05d6d07ce6ae" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void exact_checks_with_reordering</definition>
        <argsstring>(const table &amp;data, const table &amp;initial_centroids, const table &amp;ref_centroids, const table &amp;ref_responses, std::int64_t cluster_count, std::int64_t max_iteration_count, float_t accuracy_threshold, float_t ref_objective_function=-1.0, bool test_convergence=false)</argsstring>
        <name>exact_checks_with_reordering</name>
        <qualifiedname>oneapi::dal::kmeans::test::kmeans_test::exact_checks_with_reordering</qualifiedname>
        <param>
          <type>const <ref refid="classoneapi_1_1dal_1_1v1_1_1table" kindref="compound">table</ref> &amp;</type>
          <declname>data</declname>
        </param>
        <param>
          <type>const <ref refid="classoneapi_1_1dal_1_1v1_1_1table" kindref="compound">table</ref> &amp;</type>
          <declname>initial_centroids</declname>
        </param>
        <param>
          <type>const <ref refid="classoneapi_1_1dal_1_1v1_1_1table" kindref="compound">table</ref> &amp;</type>
          <declname>ref_centroids</declname>
        </param>
        <param>
          <type>const <ref refid="classoneapi_1_1dal_1_1v1_1_1table" kindref="compound">table</ref> &amp;</type>
          <declname>ref_responses</declname>
        </param>
        <param>
          <type>std::int64_t</type>
          <declname>cluster_count</declname>
        </param>
        <param>
          <type>std::int64_t</type>
          <declname>max_iteration_count</declname>
        </param>
        <param>
          <type>float_t</type>
          <declname>accuracy_threshold</declname>
        </param>
        <param>
          <type>float_t</type>
          <declname>ref_objective_function</declname>
          <defval>-1.0</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>test_convergence</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/oneDAL/oneDAL/cpp/oneapi/dal/algo/kmeans/test/fixture.hpp" line="114" column="10" bodyfile="/home/runner/work/oneDAL/oneDAL/cpp/oneapi/dal/algo/kmeans/test/fixture.hpp" bodystart="114" bodyend="151"/>
      </memberdef>
      <memberdef kind="function" id="classoneapi_1_1dal_1_1kmeans_1_1test_1_1kmeans__test_1a46e7dcd31de684ac4a53becd34ec6899" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void check_on_gold_data</definition>
        <argsstring>()</argsstring>
        <name>check_on_gold_data</name>
        <qualifiedname>oneapi::dal::kmeans::test::kmeans_test::check_on_gold_data</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/oneDAL/oneDAL/cpp/oneapi/dal/algo/kmeans/test/fixture.hpp" line="153" column="10" bodyfile="/home/runner/work/oneDAL/oneDAL/cpp/oneapi/dal/algo/kmeans/test/fixture.hpp" bodystart="153" bodyend="200"/>
      </memberdef>
      <memberdef kind="function" id="classoneapi_1_1dal_1_1kmeans_1_1test_1_1kmeans__test_1ae9dc5ab9ad19083406ab95edb73c5f42" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void check_empty_clusters</definition>
        <argsstring>()</argsstring>
        <name>check_empty_clusters</name>
        <qualifiedname>oneapi::dal::kmeans::test::kmeans_test::check_empty_clusters</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/oneDAL/oneDAL/cpp/oneapi/dal/algo/kmeans/test/fixture.hpp" line="202" column="10" bodyfile="/home/runner/work/oneDAL/oneDAL/cpp/oneapi/dal/algo/kmeans/test/fixture.hpp" bodystart="202" bodyend="216"/>
      </memberdef>
      <memberdef kind="function" id="classoneapi_1_1dal_1_1kmeans_1_1test_1_1kmeans__test_1a14cc085bb31ee1791fe65c33491980c1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void check_on_smoke_data</definition>
        <argsstring>()</argsstring>
        <name>check_on_smoke_data</name>
        <qualifiedname>oneapi::dal::kmeans::test::kmeans_test::check_on_smoke_data</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/oneDAL/oneDAL/cpp/oneapi/dal/algo/kmeans/test/fixture.hpp" line="218" column="10" bodyfile="/home/runner/work/oneDAL/oneDAL/cpp/oneapi/dal/algo/kmeans/test/fixture.hpp" bodystart="218" bodyend="249"/>
      </memberdef>
      <memberdef kind="function" id="classoneapi_1_1dal_1_1kmeans_1_1test_1_1kmeans__test_1a5af0c6779b2cc65ecb321703a6aa6daa" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void check_on_large_data_with_one_cluster</definition>
        <argsstring>()</argsstring>
        <name>check_on_large_data_with_one_cluster</name>
        <qualifiedname>oneapi::dal::kmeans::test::kmeans_test::check_on_large_data_with_one_cluster</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/oneDAL/oneDAL/cpp/oneapi/dal/algo/kmeans/test/fixture.hpp" line="251" column="10" bodyfile="/home/runner/work/oneDAL/oneDAL/cpp/oneapi/dal/algo/kmeans/test/fixture.hpp" bodystart="251" bodyend="284"/>
      </memberdef>
      <memberdef kind="function" id="classoneapi_1_1dal_1_1kmeans_1_1test_1_1kmeans__test_1a10e31bc1ba911b962d51b64c4cd24d9a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void partial_centroids_stress_test</definition>
        <argsstring>()</argsstring>
        <name>partial_centroids_stress_test</name>
        <qualifiedname>oneapi::dal::kmeans::test::kmeans_test::partial_centroids_stress_test</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/oneDAL/oneDAL/cpp/oneapi/dal/algo/kmeans/test/fixture.hpp" line="286" column="10" bodyfile="/home/runner/work/oneDAL/oneDAL/cpp/oneapi/dal/algo/kmeans/test/fixture.hpp" bodystart="286" bodyend="305"/>
      </memberdef>
      <memberdef kind="function" id="classoneapi_1_1dal_1_1kmeans_1_1test_1_1kmeans__test_1a2ea2e1669cca291a804f4dd93fea2902" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void test_on_sparse_data</definition>
        <argsstring>(const oneapi::dal::test::engine::csr_make_blobs&lt; float_t &gt; &amp;input, std::int64_t max_iter_count, float_t accuracy_threshold, bool init_centroids)</argsstring>
        <name>test_on_sparse_data</name>
        <qualifiedname>oneapi::dal::kmeans::test::kmeans_test::test_on_sparse_data</qualifiedname>
        <param>
          <type>const <ref refid="structoneapi_1_1dal_1_1test_1_1engine_1_1csr__make__blobs" kindref="compound">oneapi::dal::test::engine::csr_make_blobs</ref>&lt; float_t &gt; &amp;</type>
          <declname>input</declname>
        </param>
        <param>
          <type>std::int64_t</type>
          <declname>max_iter_count</declname>
        </param>
        <param>
          <type>float_t</type>
          <declname>accuracy_threshold</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>init_centroids</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/oneDAL/oneDAL/cpp/oneapi/dal/algo/kmeans/test/fixture.hpp" line="307" column="10" bodyfile="/home/runner/work/oneDAL/oneDAL/cpp/oneapi/dal/algo/kmeans/test/fixture.hpp" bodystart="307" bodyend="333"/>
      </memberdef>
      <memberdef kind="function" id="classoneapi_1_1dal_1_1kmeans_1_1test_1_1kmeans__test_1a0c142b55f13363dd0f171a04214379cd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void test_on_dataset</definition>
        <argsstring>(const std::string &amp;dataset_path, std::int64_t cluster_count, std::int64_t max_iteration_count, float_t expected_dbi, float_t expected_obj, float_t obj_ref_tol=1.0e-4, float_t dbi_ref_tol=1.0e-3)</argsstring>
        <name>test_on_dataset</name>
        <qualifiedname>oneapi::dal::kmeans::test::kmeans_test::test_on_dataset</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>dataset_path</declname>
        </param>
        <param>
          <type>std::int64_t</type>
          <declname>cluster_count</declname>
        </param>
        <param>
          <type>std::int64_t</type>
          <declname>max_iteration_count</declname>
        </param>
        <param>
          <type>float_t</type>
          <declname>expected_dbi</declname>
        </param>
        <param>
          <type>float_t</type>
          <declname>expected_obj</declname>
        </param>
        <param>
          <type>float_t</type>
          <declname>obj_ref_tol</declname>
          <defval>1.0e-4</defval>
        </param>
        <param>
          <type>float_t</type>
          <declname>dbi_ref_tol</declname>
          <defval>1.0e-3</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/oneDAL/oneDAL/cpp/oneapi/dal/algo/kmeans/test/fixture.hpp" line="335" column="10" bodyfile="/home/runner/work/oneDAL/oneDAL/cpp/oneapi/dal/algo/kmeans/test/fixture.hpp" bodystart="335" bodyend="352"/>
      </memberdef>
      <memberdef kind="function" id="classoneapi_1_1dal_1_1kmeans_1_1test_1_1kmeans__test_1a10b4ebf8836191d51d04db5114528154" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void test_optional_results_on_dataset</definition>
        <argsstring>(const std::string &amp;dataset_path, std::int64_t cluster_count, std::int64_t max_iteration_count, float_t expected_dbi, float_t expected_obj, float_t obj_ref_tol=1.0e-4, float_t dbi_ref_tol=1.0e-3)</argsstring>
        <name>test_optional_results_on_dataset</name>
        <qualifiedname>oneapi::dal::kmeans::test::kmeans_test::test_optional_results_on_dataset</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>dataset_path</declname>
        </param>
        <param>
          <type>std::int64_t</type>
          <declname>cluster_count</declname>
        </param>
        <param>
          <type>std::int64_t</type>
          <declname>max_iteration_count</declname>
        </param>
        <param>
          <type>float_t</type>
          <declname>expected_dbi</declname>
        </param>
        <param>
          <type>float_t</type>
          <declname>expected_obj</declname>
        </param>
        <param>
          <type>float_t</type>
          <declname>obj_ref_tol</declname>
          <defval>1.0e-4</defval>
        </param>
        <param>
          <type>float_t</type>
          <declname>dbi_ref_tol</declname>
          <defval>1.0e-3</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/oneDAL/oneDAL/cpp/oneapi/dal/algo/kmeans/test/fixture.hpp" line="354" column="10" bodyfile="/home/runner/work/oneDAL/oneDAL/cpp/oneapi/dal/algo/kmeans/test/fixture.hpp" bodystart="354" bodyend="371"/>
      </memberdef>
      <memberdef kind="function" id="classoneapi_1_1dal_1_1kmeans_1_1test_1_1kmeans__test_1a53764981dcd42ebd9a03571922137f1b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void dbi_deterministic_checks</definition>
        <argsstring>(const table &amp;data, std::int64_t cluster_count, std::int64_t max_iteration_count, float_t accuracy_threshold, float_t ref_dbi, float_t ref_obj_func, float_t obj_ref_tol=1.0e-4, float_t dbi_ref_tol=1.0e-4)</argsstring>
        <name>dbi_deterministic_checks</name>
        <qualifiedname>oneapi::dal::kmeans::test::kmeans_test::dbi_deterministic_checks</qualifiedname>
        <param>
          <type>const <ref refid="classoneapi_1_1dal_1_1v1_1_1table" kindref="compound">table</ref> &amp;</type>
          <declname>data</declname>
        </param>
        <param>
          <type>std::int64_t</type>
          <declname>cluster_count</declname>
        </param>
        <param>
          <type>std::int64_t</type>
          <declname>max_iteration_count</declname>
        </param>
        <param>
          <type>float_t</type>
          <declname>accuracy_threshold</declname>
        </param>
        <param>
          <type>float_t</type>
          <declname>ref_dbi</declname>
        </param>
        <param>
          <type>float_t</type>
          <declname>ref_obj_func</declname>
        </param>
        <param>
          <type>float_t</type>
          <declname>obj_ref_tol</declname>
          <defval>1.0e-4</defval>
        </param>
        <param>
          <type>float_t</type>
          <declname>dbi_ref_tol</declname>
          <defval>1.0e-4</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/oneDAL/oneDAL/cpp/oneapi/dal/algo/kmeans/test/fixture.hpp" line="373" column="10" bodyfile="/home/runner/work/oneDAL/oneDAL/cpp/oneapi/dal/algo/kmeans/test/fixture.hpp" bodystart="373" bodyend="408"/>
      </memberdef>
      <memberdef kind="function" id="classoneapi_1_1dal_1_1kmeans_1_1test_1_1kmeans__test_1a8b69d3bf205927de771b0b124976eee2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void optional_results_dbi_deterministic_checks</definition>
        <argsstring>(const table &amp;data, std::int64_t cluster_count, std::int64_t max_iteration_count, float_t accuracy_threshold, float_t ref_dbi, float_t ref_obj_func, float_t obj_ref_tol=1.0e-4, float_t dbi_ref_tol=1.0e-4)</argsstring>
        <name>optional_results_dbi_deterministic_checks</name>
        <qualifiedname>oneapi::dal::kmeans::test::kmeans_test::optional_results_dbi_deterministic_checks</qualifiedname>
        <param>
          <type>const <ref refid="classoneapi_1_1dal_1_1v1_1_1table" kindref="compound">table</ref> &amp;</type>
          <declname>data</declname>
        </param>
        <param>
          <type>std::int64_t</type>
          <declname>cluster_count</declname>
        </param>
        <param>
          <type>std::int64_t</type>
          <declname>max_iteration_count</declname>
        </param>
        <param>
          <type>float_t</type>
          <declname>accuracy_threshold</declname>
        </param>
        <param>
          <type>float_t</type>
          <declname>ref_dbi</declname>
        </param>
        <param>
          <type>float_t</type>
          <declname>ref_obj_func</declname>
        </param>
        <param>
          <type>float_t</type>
          <declname>obj_ref_tol</declname>
          <defval>1.0e-4</defval>
        </param>
        <param>
          <type>float_t</type>
          <declname>dbi_ref_tol</declname>
          <defval>1.0e-4</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/oneDAL/oneDAL/cpp/oneapi/dal/algo/kmeans/test/fixture.hpp" line="410" column="10" bodyfile="/home/runner/work/oneDAL/oneDAL/cpp/oneapi/dal/algo/kmeans/test/fixture.hpp" bodystart="410" bodyend="457"/>
      </memberdef>
      <memberdef kind="function" id="classoneapi_1_1dal_1_1kmeans_1_1test_1_1kmeans__test_1a279057e1da46d2879d543e21c9091b63" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void dbi_deterministic_checks_with_centroids</definition>
        <argsstring>(const table &amp;data, const table &amp;initial_centroids, std::int64_t cluster_count, std::int64_t max_iteration_count, float_t accuracy_threshold, float_t ref_dbi, float_t ref_obj_func, float_t obj_ref_tol=1.0e-4, float_t dbi_ref_tol=1.0e-4)</argsstring>
        <name>dbi_deterministic_checks_with_centroids</name>
        <qualifiedname>oneapi::dal::kmeans::test::kmeans_test::dbi_deterministic_checks_with_centroids</qualifiedname>
        <param>
          <type>const <ref refid="classoneapi_1_1dal_1_1v1_1_1table" kindref="compound">table</ref> &amp;</type>
          <declname>data</declname>
        </param>
        <param>
          <type>const <ref refid="classoneapi_1_1dal_1_1v1_1_1table" kindref="compound">table</ref> &amp;</type>
          <declname>initial_centroids</declname>
        </param>
        <param>
          <type>std::int64_t</type>
          <declname>cluster_count</declname>
        </param>
        <param>
          <type>std::int64_t</type>
          <declname>max_iteration_count</declname>
        </param>
        <param>
          <type>float_t</type>
          <declname>accuracy_threshold</declname>
        </param>
        <param>
          <type>float_t</type>
          <declname>ref_dbi</declname>
        </param>
        <param>
          <type>float_t</type>
          <declname>ref_obj_func</declname>
        </param>
        <param>
          <type>float_t</type>
          <declname>obj_ref_tol</declname>
          <defval>1.0e-4</defval>
        </param>
        <param>
          <type>float_t</type>
          <declname>dbi_ref_tol</declname>
          <defval>1.0e-4</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/oneDAL/oneDAL/cpp/oneapi/dal/algo/kmeans/test/fixture.hpp" line="459" column="10" bodyfile="/home/runner/work/oneDAL/oneDAL/cpp/oneapi/dal/algo/kmeans/test/fixture.hpp" bodystart="459" bodyend="491"/>
      </memberdef>
      <memberdef kind="function" id="classoneapi_1_1dal_1_1kmeans_1_1test_1_1kmeans__test_1a8436bba5aaa0f6782bb951279f845c18" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>model_t</type>
        <definition>model_t train_with_initialization_checks</definition>
        <argsstring>(const table &amp;data, const table &amp;ref_centroids, const table &amp;ref_responses, std::int64_t cluster_count, std::int64_t max_iteration_count, float_t accuracy_threshold)</argsstring>
        <name>train_with_initialization_checks</name>
        <qualifiedname>oneapi::dal::kmeans::test::kmeans_test::train_with_initialization_checks</qualifiedname>
        <param>
          <type>const <ref refid="classoneapi_1_1dal_1_1v1_1_1table" kindref="compound">table</ref> &amp;</type>
          <declname>data</declname>
        </param>
        <param>
          <type>const <ref refid="classoneapi_1_1dal_1_1v1_1_1table" kindref="compound">table</ref> &amp;</type>
          <declname>ref_centroids</declname>
        </param>
        <param>
          <type>const <ref refid="classoneapi_1_1dal_1_1v1_1_1table" kindref="compound">table</ref> &amp;</type>
          <declname>ref_responses</declname>
        </param>
        <param>
          <type>std::int64_t</type>
          <declname>cluster_count</declname>
        </param>
        <param>
          <type>std::int64_t</type>
          <declname>max_iteration_count</declname>
        </param>
        <param>
          <type>float_t</type>
          <declname>accuracy_threshold</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/oneDAL/oneDAL/cpp/oneapi/dal/algo/kmeans/test/fixture.hpp" line="493" column="13" bodyfile="/home/runner/work/oneDAL/oneDAL/cpp/oneapi/dal/algo/kmeans/test/fixture.hpp" bodystart="493" bodyend="509"/>
      </memberdef>
      <memberdef kind="function" id="classoneapi_1_1dal_1_1kmeans_1_1test_1_1kmeans__test_1a490de170a07b4565adb79c161901d9ef" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void infer_checks</definition>
        <argsstring>(const table &amp;data, const model_t &amp;model, const table &amp;ref_responses, float_t ref_objective_function=-1.0)</argsstring>
        <name>infer_checks</name>
        <qualifiedname>oneapi::dal::kmeans::test::kmeans_test::infer_checks</qualifiedname>
        <param>
          <type>const <ref refid="classoneapi_1_1dal_1_1v1_1_1table" kindref="compound">table</ref> &amp;</type>
          <declname>data</declname>
        </param>
        <param>
          <type>const model_t &amp;</type>
          <declname>model</declname>
        </param>
        <param>
          <type>const <ref refid="classoneapi_1_1dal_1_1v1_1_1table" kindref="compound">table</ref> &amp;</type>
          <declname>ref_responses</declname>
        </param>
        <param>
          <type>float_t</type>
          <declname>ref_objective_function</declname>
          <defval>-1.0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/oneDAL/oneDAL/cpp/oneapi/dal/algo/kmeans/test/fixture.hpp" line="511" column="10" bodyfile="/home/runner/work/oneDAL/oneDAL/cpp/oneapi/dal/algo/kmeans/test/fixture.hpp" bodystart="511" bodyend="525"/>
      </memberdef>
      <memberdef kind="function" id="classoneapi_1_1dal_1_1kmeans_1_1test_1_1kmeans__test_1a436359b260c592e3ced315098e8da975" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void check_train_result</definition>
        <argsstring>(const descriptor_t &amp;desc, const train_result_t &amp;result, const table &amp;ref_centroids, const table &amp;ref_responses, bool test_convergence=false)</argsstring>
        <name>check_train_result</name>
        <qualifiedname>oneapi::dal::kmeans::test::kmeans_test::check_train_result</qualifiedname>
        <param>
          <type>const descriptor_t &amp;</type>
          <declname>desc</declname>
        </param>
        <param>
          <type>const <ref refid="classoneapi_1_1dal_1_1kmeans_1_1v1_1_1train__result" kindref="compound">train_result_t</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="classoneapi_1_1dal_1_1v1_1_1table" kindref="compound">table</ref> &amp;</type>
          <declname>ref_centroids</declname>
        </param>
        <param>
          <type>const <ref refid="classoneapi_1_1dal_1_1v1_1_1table" kindref="compound">table</ref> &amp;</type>
          <declname>ref_responses</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>test_convergence</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/oneDAL/oneDAL/cpp/oneapi/dal/algo/kmeans/test/fixture.hpp" line="527" column="10" bodyfile="/home/runner/work/oneDAL/oneDAL/cpp/oneapi/dal/algo/kmeans/test/fixture.hpp" bodystart="527" bodyend="543"/>
      </memberdef>
      <memberdef kind="function" id="classoneapi_1_1dal_1_1kmeans_1_1test_1_1kmeans__test_1aed100e56fc8ba1e0100629edc2ffc040" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void check_train_result</definition>
        <argsstring>(const descriptor_t &amp;desc, const train_result_t &amp;result, const array&lt; float_t &gt; &amp;match_map, const table &amp;ref_centroids, const table &amp;ref_responses, bool test_convergence=false)</argsstring>
        <name>check_train_result</name>
        <qualifiedname>oneapi::dal::kmeans::test::kmeans_test::check_train_result</qualifiedname>
        <param>
          <type>const descriptor_t &amp;</type>
          <declname>desc</declname>
        </param>
        <param>
          <type>const <ref refid="classoneapi_1_1dal_1_1kmeans_1_1v1_1_1train__result" kindref="compound">train_result_t</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="classoneapi_1_1dal_1_1v2_1_1array" kindref="compound">array</ref>&lt; float_t &gt; &amp;</type>
          <declname>match_map</declname>
        </param>
        <param>
          <type>const <ref refid="classoneapi_1_1dal_1_1v1_1_1table" kindref="compound">table</ref> &amp;</type>
          <declname>ref_centroids</declname>
        </param>
        <param>
          <type>const <ref refid="classoneapi_1_1dal_1_1v1_1_1table" kindref="compound">table</ref> &amp;</type>
          <declname>ref_responses</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>test_convergence</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/oneDAL/oneDAL/cpp/oneapi/dal/algo/kmeans/test/fixture.hpp" line="545" column="10" bodyfile="/home/runner/work/oneDAL/oneDAL/cpp/oneapi/dal/algo/kmeans/test/fixture.hpp" bodystart="545" bodyend="563"/>
      </memberdef>
      <memberdef kind="function" id="classoneapi_1_1dal_1_1kmeans_1_1test_1_1kmeans__test_1ac0a96194fc9ea22c1f9ef281cf2c9e61" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool check_value_with_ref_tol</definition>
        <argsstring>(float_t val, float_t ref_val, float_t ref_tol)</argsstring>
        <name>check_value_with_ref_tol</name>
        <qualifiedname>oneapi::dal::kmeans::test::kmeans_test::check_value_with_ref_tol</qualifiedname>
        <param>
          <type>float_t</type>
          <declname>val</declname>
        </param>
        <param>
          <type>float_t</type>
          <declname>ref_val</declname>
        </param>
        <param>
          <type>float_t</type>
          <declname>ref_tol</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/oneDAL/oneDAL/cpp/oneapi/dal/algo/kmeans/test/fixture.hpp" line="565" column="10" bodyfile="/home/runner/work/oneDAL/oneDAL/cpp/oneapi/dal/algo/kmeans/test/fixture.hpp" bodystart="565" bodyend="571"/>
      </memberdef>
      <memberdef kind="function" id="classoneapi_1_1dal_1_1kmeans_1_1test_1_1kmeans__test_1ac3bfe47c97d96c7b345b58f002be99c1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void check_base_infer_result</definition>
        <argsstring>(const descriptor_t &amp;desc, const infer_result_t &amp;result, float_t ref_objective_function)</argsstring>
        <name>check_base_infer_result</name>
        <qualifiedname>oneapi::dal::kmeans::test::kmeans_test::check_base_infer_result</qualifiedname>
        <param>
          <type>const descriptor_t &amp;</type>
          <declname>desc</declname>
        </param>
        <param>
          <type>const <ref refid="classoneapi_1_1dal_1_1kmeans_1_1v1_1_1infer__result" kindref="compound">infer_result_t</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>float_t</type>
          <declname>ref_objective_function</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/oneDAL/oneDAL/cpp/oneapi/dal/algo/kmeans/test/fixture.hpp" line="573" column="10" bodyfile="/home/runner/work/oneDAL/oneDAL/cpp/oneapi/dal/algo/kmeans/test/fixture.hpp" bodystart="573" bodyend="588"/>
      </memberdef>
      <memberdef kind="function" id="classoneapi_1_1dal_1_1kmeans_1_1test_1_1kmeans__test_1a3c973abb74b6eccf1ec2215380631600" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void check_infer_result</definition>
        <argsstring>(const descriptor_t &amp;desc, const infer_result_t &amp;result, const table &amp;ref_responses, float_t ref_objective_function)</argsstring>
        <name>check_infer_result</name>
        <qualifiedname>oneapi::dal::kmeans::test::kmeans_test::check_infer_result</qualifiedname>
        <param>
          <type>const descriptor_t &amp;</type>
          <declname>desc</declname>
        </param>
        <param>
          <type>const <ref refid="classoneapi_1_1dal_1_1kmeans_1_1v1_1_1infer__result" kindref="compound">infer_result_t</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="classoneapi_1_1dal_1_1v1_1_1table" kindref="compound">table</ref> &amp;</type>
          <declname>ref_responses</declname>
        </param>
        <param>
          <type>float_t</type>
          <declname>ref_objective_function</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/oneDAL/oneDAL/cpp/oneapi/dal/algo/kmeans/test/fixture.hpp" line="590" column="10" bodyfile="/home/runner/work/oneDAL/oneDAL/cpp/oneapi/dal/algo/kmeans/test/fixture.hpp" bodystart="590" bodyend="598"/>
      </memberdef>
      <memberdef kind="function" id="classoneapi_1_1dal_1_1kmeans_1_1test_1_1kmeans__test_1a0c37e71e8a92536edafa4c43f0026655" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void check_infer_result</definition>
        <argsstring>(const descriptor_t &amp;desc, const infer_result_t &amp;result, const array&lt; float_t &gt; &amp;match_map, const table &amp;ref_responses, float_t ref_objective_function)</argsstring>
        <name>check_infer_result</name>
        <qualifiedname>oneapi::dal::kmeans::test::kmeans_test::check_infer_result</qualifiedname>
        <param>
          <type>const descriptor_t &amp;</type>
          <declname>desc</declname>
        </param>
        <param>
          <type>const <ref refid="classoneapi_1_1dal_1_1kmeans_1_1v1_1_1infer__result" kindref="compound">infer_result_t</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="classoneapi_1_1dal_1_1v2_1_1array" kindref="compound">array</ref>&lt; float_t &gt; &amp;</type>
          <declname>match_map</declname>
        </param>
        <param>
          <type>const <ref refid="classoneapi_1_1dal_1_1v1_1_1table" kindref="compound">table</ref> &amp;</type>
          <declname>ref_responses</declname>
        </param>
        <param>
          <type>float_t</type>
          <declname>ref_objective_function</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/oneDAL/oneDAL/cpp/oneapi/dal/algo/kmeans/test/fixture.hpp" line="600" column="10" bodyfile="/home/runner/work/oneDAL/oneDAL/cpp/oneapi/dal/algo/kmeans/test/fixture.hpp" bodystart="600" bodyend="608"/>
      </memberdef>
      <memberdef kind="function" id="classoneapi_1_1dal_1_1kmeans_1_1test_1_1kmeans__test_1a8f4fbb65478004e3ec444aaa78ba1f33" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void check_centroid_match_with_rel_tol</definition>
        <argsstring>(float_t rel_tol, const table &amp;left, const table &amp;right)</argsstring>
        <name>check_centroid_match_with_rel_tol</name>
        <qualifiedname>oneapi::dal::kmeans::test::kmeans_test::check_centroid_match_with_rel_tol</qualifiedname>
        <param>
          <type>float_t</type>
          <declname>rel_tol</declname>
        </param>
        <param>
          <type>const <ref refid="classoneapi_1_1dal_1_1v1_1_1table" kindref="compound">table</ref> &amp;</type>
          <declname>left</declname>
        </param>
        <param>
          <type>const <ref refid="classoneapi_1_1dal_1_1v1_1_1table" kindref="compound">table</ref> &amp;</type>
          <declname>right</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/oneDAL/oneDAL/cpp/oneapi/dal/algo/kmeans/test/fixture.hpp" line="610" column="10" bodyfile="/home/runner/work/oneDAL/oneDAL/cpp/oneapi/dal/algo/kmeans/test/fixture.hpp" bodystart="610" bodyend="630"/>
      </memberdef>
      <memberdef kind="function" id="classoneapi_1_1dal_1_1kmeans_1_1test_1_1kmeans__test_1ae016e9774c65237d7b27c7b407e2c141" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void check_centroid_match_with_rel_tol</definition>
        <argsstring>(const array&lt; float_t &gt; &amp;match_map, float_t rel_tol, const table &amp;left, const table &amp;right)</argsstring>
        <name>check_centroid_match_with_rel_tol</name>
        <qualifiedname>oneapi::dal::kmeans::test::kmeans_test::check_centroid_match_with_rel_tol</qualifiedname>
        <param>
          <type>const <ref refid="classoneapi_1_1dal_1_1v2_1_1array" kindref="compound">array</ref>&lt; float_t &gt; &amp;</type>
          <declname>match_map</declname>
        </param>
        <param>
          <type>float_t</type>
          <declname>rel_tol</declname>
        </param>
        <param>
          <type>const <ref refid="classoneapi_1_1dal_1_1v1_1_1table" kindref="compound">table</ref> &amp;</type>
          <declname>left</declname>
        </param>
        <param>
          <type>const <ref refid="classoneapi_1_1dal_1_1v1_1_1table" kindref="compound">table</ref> &amp;</type>
          <declname>right</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/oneDAL/oneDAL/cpp/oneapi/dal/algo/kmeans/test/fixture.hpp" line="632" column="10" bodyfile="/home/runner/work/oneDAL/oneDAL/cpp/oneapi/dal/algo/kmeans/test/fixture.hpp" bodystart="632" bodyend="659"/>
      </memberdef>
      <memberdef kind="function" id="classoneapi_1_1dal_1_1kmeans_1_1test_1_1kmeans__test_1aa1d85638dfa7ad27c70e3f7b306efa2b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float_t</type>
        <definition>float_t squared_euclidian_distance</definition>
        <argsstring>(std::int64_t x_offset, const array&lt; float_t &gt; &amp;x, std::int64_t y_offset, const array&lt; float_t &gt; &amp;y, std::int64_t feature_count)</argsstring>
        <name>squared_euclidian_distance</name>
        <qualifiedname>oneapi::dal::kmeans::test::kmeans_test::squared_euclidian_distance</qualifiedname>
        <param>
          <type>std::int64_t</type>
          <declname>x_offset</declname>
        </param>
        <param>
          <type>const <ref refid="classoneapi_1_1dal_1_1v2_1_1array" kindref="compound">array</ref>&lt; float_t &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>std::int64_t</type>
          <declname>y_offset</declname>
        </param>
        <param>
          <type>const <ref refid="classoneapi_1_1dal_1_1v2_1_1array" kindref="compound">array</ref>&lt; float_t &gt; &amp;</type>
          <declname>y</declname>
        </param>
        <param>
          <type>std::int64_t</type>
          <declname>feature_count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/oneDAL/oneDAL/cpp/oneapi/dal/algo/kmeans/test/fixture.hpp" line="661" column="13" bodyfile="/home/runner/work/oneDAL/oneDAL/cpp/oneapi/dal/algo/kmeans/test/fixture.hpp" bodystart="661" bodyend="672"/>
      </memberdef>
      <memberdef kind="function" id="classoneapi_1_1dal_1_1kmeans_1_1test_1_1kmeans__test_1a18acf706081accf015f8d3e4e2a37eb7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void find_match_centroids</definition>
        <argsstring>(const table &amp;ref_centroids, const table &amp;centroids, std::int64_t feature_count, array&lt; float_t &gt; &amp;match_map)</argsstring>
        <name>find_match_centroids</name>
        <qualifiedname>oneapi::dal::kmeans::test::kmeans_test::find_match_centroids</qualifiedname>
        <param>
          <type>const <ref refid="classoneapi_1_1dal_1_1v1_1_1table" kindref="compound">table</ref> &amp;</type>
          <declname>ref_centroids</declname>
        </param>
        <param>
          <type>const <ref refid="classoneapi_1_1dal_1_1v1_1_1table" kindref="compound">table</ref> &amp;</type>
          <declname>centroids</declname>
        </param>
        <param>
          <type>std::int64_t</type>
          <declname>feature_count</declname>
        </param>
        <param>
          <type><ref refid="classoneapi_1_1dal_1_1v2_1_1array" kindref="compound">array</ref>&lt; float_t &gt; &amp;</type>
          <declname>match_map</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/oneDAL/oneDAL/cpp/oneapi/dal/algo/kmeans/test/fixture.hpp" line="674" column="10" bodyfile="/home/runner/work/oneDAL/oneDAL/cpp/oneapi/dal/algo/kmeans/test/fixture.hpp" bodystart="674" bodyend="703"/>
      </memberdef>
      <memberdef kind="function" id="classoneapi_1_1dal_1_1kmeans_1_1test_1_1kmeans__test_1a94ea4bbdade836c2dc1efd2763deb067" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void check_response_match</definition>
        <argsstring>(const table &amp;left, const table &amp;right)</argsstring>
        <name>check_response_match</name>
        <qualifiedname>oneapi::dal::kmeans::test::kmeans_test::check_response_match</qualifiedname>
        <param>
          <type>const <ref refid="classoneapi_1_1dal_1_1v1_1_1table" kindref="compound">table</ref> &amp;</type>
          <declname>left</declname>
        </param>
        <param>
          <type>const <ref refid="classoneapi_1_1dal_1_1v1_1_1table" kindref="compound">table</ref> &amp;</type>
          <declname>right</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/oneDAL/oneDAL/cpp/oneapi/dal/algo/kmeans/test/fixture.hpp" line="705" column="10" bodyfile="/home/runner/work/oneDAL/oneDAL/cpp/oneapi/dal/algo/kmeans/test/fixture.hpp" bodystart="705" bodyend="721"/>
      </memberdef>
      <memberdef kind="function" id="classoneapi_1_1dal_1_1kmeans_1_1test_1_1kmeans__test_1ac2ca92e95b819d0f05048e96af522598" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void check_response_match</definition>
        <argsstring>(const array&lt; float_t &gt; &amp;match_map, const table &amp;left, const table &amp;right)</argsstring>
        <name>check_response_match</name>
        <qualifiedname>oneapi::dal::kmeans::test::kmeans_test::check_response_match</qualifiedname>
        <param>
          <type>const <ref refid="classoneapi_1_1dal_1_1v2_1_1array" kindref="compound">array</ref>&lt; float_t &gt; &amp;</type>
          <declname>match_map</declname>
        </param>
        <param>
          <type>const <ref refid="classoneapi_1_1dal_1_1v1_1_1table" kindref="compound">table</ref> &amp;</type>
          <declname>left</declname>
        </param>
        <param>
          <type>const <ref refid="classoneapi_1_1dal_1_1v1_1_1table" kindref="compound">table</ref> &amp;</type>
          <declname>right</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/oneDAL/oneDAL/cpp/oneapi/dal/algo/kmeans/test/fixture.hpp" line="723" column="10" bodyfile="/home/runner/work/oneDAL/oneDAL/cpp/oneapi/dal/algo/kmeans/test/fixture.hpp" bodystart="723" bodyend="742"/>
      </memberdef>
      <memberdef kind="function" id="classoneapi_1_1dal_1_1kmeans_1_1test_1_1kmeans__test_1aec2c75dbcbe3f3ce0e89dd6f1d98a41a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void check_nans</definition>
        <argsstring>(const train_result_t &amp;result)</argsstring>
        <name>check_nans</name>
        <qualifiedname>oneapi::dal::kmeans::test::kmeans_test::check_nans</qualifiedname>
        <param>
          <type>const <ref refid="classoneapi_1_1dal_1_1kmeans_1_1v1_1_1train__result" kindref="compound">train_result_t</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/oneDAL/oneDAL/cpp/oneapi/dal/algo/kmeans/test/fixture.hpp" line="744" column="10" bodyfile="/home/runner/work/oneDAL/oneDAL/cpp/oneapi/dal/algo/kmeans/test/fixture.hpp" bodystart="744" bodyend="752"/>
      </memberdef>
      <memberdef kind="function" id="classoneapi_1_1dal_1_1kmeans_1_1test_1_1kmeans__test_1a3933571986295d22e966783ca1b2a864" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void check_nans</definition>
        <argsstring>(const infer_result_t &amp;result)</argsstring>
        <name>check_nans</name>
        <qualifiedname>oneapi::dal::kmeans::test::kmeans_test::check_nans</qualifiedname>
        <param>
          <type>const <ref refid="classoneapi_1_1dal_1_1kmeans_1_1v1_1_1infer__result" kindref="compound">infer_result_t</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/oneDAL/oneDAL/cpp/oneapi/dal/algo/kmeans/test/fixture.hpp" line="754" column="10" bodyfile="/home/runner/work/oneDAL/oneDAL/cpp/oneapi/dal/algo/kmeans/test/fixture.hpp" bodystart="754" bodyend="762"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classoneapi_1_1dal_1_1kmeans_1_1test_1_1kmeans__test_1a365bce077f29808de4de341fa71fabe8" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>static auto unpack_result</definition>
        <argsstring>(const train_result_t &amp;result)</argsstring>
        <name>unpack_result</name>
        <qualifiedname>oneapi::dal::kmeans::test::kmeans_test::unpack_result</qualifiedname>
        <param>
          <type>const <ref refid="classoneapi_1_1dal_1_1kmeans_1_1v1_1_1train__result" kindref="compound">train_result_t</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/oneDAL/oneDAL/cpp/oneapi/dal/algo/kmeans/test/fixture.hpp" line="764" column="17" bodyfile="/home/runner/work/oneDAL/oneDAL/cpp/oneapi/dal/algo/kmeans/test/fixture.hpp" bodystart="764" bodyend="769"/>
      </memberdef>
      <memberdef kind="function" id="classoneapi_1_1dal_1_1kmeans_1_1test_1_1kmeans__test_1aa62deeafe81097641e6370aff97a41cb" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>static auto unpack_result</definition>
        <argsstring>(const infer_result_t &amp;result)</argsstring>
        <name>unpack_result</name>
        <qualifiedname>oneapi::dal::kmeans::test::kmeans_test::unpack_result</qualifiedname>
        <param>
          <type>const <ref refid="classoneapi_1_1dal_1_1kmeans_1_1v1_1_1infer__result" kindref="compound">infer_result_t</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/oneDAL/oneDAL/cpp/oneapi/dal/algo/kmeans/test/fixture.hpp" line="771" column="17" bodyfile="/home/runner/work/oneDAL/oneDAL/cpp/oneapi/dal/algo/kmeans/test/fixture.hpp" bodystart="771" bodyend="775"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="4">
        <label>float_algo_fixture&lt; std::tuple_element_t&lt; 0, TestType &gt; &gt;</label>
        <link refid="classoneapi_1_1dal_1_1test_1_1engine_1_1float__algo__fixture"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>kmeans_test&lt; TestType, Derived &gt;</label>
        <link refid="classoneapi_1_1dal_1_1kmeans_1_1test_1_1kmeans__test"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>algo_fixture</label>
        <link refid="classoneapi_1_1dal_1_1test_1_1engine_1_1algo__fixture"/>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>crtp_algo_fixture&lt; TestType, Derived &gt;</label>
        <link refid="classoneapi_1_1dal_1_1test_1_1engine_1_1crtp__algo__fixture"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>crtp_base_algo_fixture&lt; TestType, Derived &gt;</label>
        <link refid="classoneapi_1_1dal_1_1test_1_1engine_1_1crtp__base__algo__fixture"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>policy_fixture</label>
        <link refid="classoneapi_1_1dal_1_1test_1_1engine_1_1policy__fixture"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="4">
        <label>float_algo_fixture&lt; std::tuple_element_t&lt; 0, TestType &gt; &gt;</label>
        <link refid="classoneapi_1_1dal_1_1test_1_1engine_1_1float__algo__fixture"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>kmeans_test&lt; TestType, Derived &gt;</label>
        <link refid="classoneapi_1_1dal_1_1kmeans_1_1test_1_1kmeans__test"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>algo_fixture</label>
        <link refid="classoneapi_1_1dal_1_1test_1_1engine_1_1algo__fixture"/>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>crtp_algo_fixture&lt; TestType, Derived &gt;</label>
        <link refid="classoneapi_1_1dal_1_1test_1_1engine_1_1crtp__algo__fixture"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>crtp_base_algo_fixture&lt; TestType, Derived &gt;</label>
        <link refid="classoneapi_1_1dal_1_1test_1_1engine_1_1crtp__base__algo__fixture"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>policy_fixture</label>
        <link refid="classoneapi_1_1dal_1_1test_1_1engine_1_1policy__fixture"/>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/oneDAL/oneDAL/cpp/oneapi/dal/algo/kmeans/test/fixture.hpp" line="42" column="1" bodyfile="/home/runner/work/oneDAL/oneDAL/cpp/oneapi/dal/algo/kmeans/test/fixture.hpp" bodystart="42" bodyend="776"/>
    <listofallmembers>
      <member refid="classoneapi_1_1dal_1_1kmeans_1_1test_1_1kmeans__test_1ad8e497c0a637020e38f23327009fa9b2" prot="public" virt="non-virtual"><scope>oneapi::dal::kmeans::test::kmeans_test</scope><name>base_t</name></member>
      <member refid="classoneapi_1_1dal_1_1kmeans_1_1test_1_1kmeans__test_1ac3bfe47c97d96c7b345b58f002be99c1" prot="public" virt="non-virtual"><scope>oneapi::dal::kmeans::test::kmeans_test</scope><name>check_base_infer_result</name></member>
      <member refid="classoneapi_1_1dal_1_1kmeans_1_1test_1_1kmeans__test_1a8f4fbb65478004e3ec444aaa78ba1f33" prot="public" virt="non-virtual"><scope>oneapi::dal::kmeans::test::kmeans_test</scope><name>check_centroid_match_with_rel_tol</name></member>
      <member refid="classoneapi_1_1dal_1_1kmeans_1_1test_1_1kmeans__test_1ae016e9774c65237d7b27c7b407e2c141" prot="public" virt="non-virtual"><scope>oneapi::dal::kmeans::test::kmeans_test</scope><name>check_centroid_match_with_rel_tol</name></member>
      <member refid="classoneapi_1_1dal_1_1kmeans_1_1test_1_1kmeans__test_1ae9dc5ab9ad19083406ab95edb73c5f42" prot="public" virt="non-virtual"><scope>oneapi::dal::kmeans::test::kmeans_test</scope><name>check_empty_clusters</name></member>
      <member refid="classoneapi_1_1dal_1_1kmeans_1_1test_1_1kmeans__test_1a3c973abb74b6eccf1ec2215380631600" prot="public" virt="non-virtual"><scope>oneapi::dal::kmeans::test::kmeans_test</scope><name>check_infer_result</name></member>
      <member refid="classoneapi_1_1dal_1_1kmeans_1_1test_1_1kmeans__test_1a0c37e71e8a92536edafa4c43f0026655" prot="public" virt="non-virtual"><scope>oneapi::dal::kmeans::test::kmeans_test</scope><name>check_infer_result</name></member>
      <member refid="classoneapi_1_1dal_1_1kmeans_1_1test_1_1kmeans__test_1aec2c75dbcbe3f3ce0e89dd6f1d98a41a" prot="public" virt="non-virtual"><scope>oneapi::dal::kmeans::test::kmeans_test</scope><name>check_nans</name></member>
      <member refid="classoneapi_1_1dal_1_1kmeans_1_1test_1_1kmeans__test_1a3933571986295d22e966783ca1b2a864" prot="public" virt="non-virtual"><scope>oneapi::dal::kmeans::test::kmeans_test</scope><name>check_nans</name></member>
      <member refid="classoneapi_1_1dal_1_1kmeans_1_1test_1_1kmeans__test_1a46e7dcd31de684ac4a53becd34ec6899" prot="public" virt="non-virtual"><scope>oneapi::dal::kmeans::test::kmeans_test</scope><name>check_on_gold_data</name></member>
      <member refid="classoneapi_1_1dal_1_1kmeans_1_1test_1_1kmeans__test_1a5af0c6779b2cc65ecb321703a6aa6daa" prot="public" virt="non-virtual"><scope>oneapi::dal::kmeans::test::kmeans_test</scope><name>check_on_large_data_with_one_cluster</name></member>
      <member refid="classoneapi_1_1dal_1_1kmeans_1_1test_1_1kmeans__test_1a14cc085bb31ee1791fe65c33491980c1" prot="public" virt="non-virtual"><scope>oneapi::dal::kmeans::test::kmeans_test</scope><name>check_on_smoke_data</name></member>
      <member refid="classoneapi_1_1dal_1_1kmeans_1_1test_1_1kmeans__test_1a94ea4bbdade836c2dc1efd2763deb067" prot="public" virt="non-virtual"><scope>oneapi::dal::kmeans::test::kmeans_test</scope><name>check_response_match</name></member>
      <member refid="classoneapi_1_1dal_1_1kmeans_1_1test_1_1kmeans__test_1ac2ca92e95b819d0f05048e96af522598" prot="public" virt="non-virtual"><scope>oneapi::dal::kmeans::test::kmeans_test</scope><name>check_response_match</name></member>
      <member refid="classoneapi_1_1dal_1_1kmeans_1_1test_1_1kmeans__test_1a436359b260c592e3ced315098e8da975" prot="public" virt="non-virtual"><scope>oneapi::dal::kmeans::test::kmeans_test</scope><name>check_train_result</name></member>
      <member refid="classoneapi_1_1dal_1_1kmeans_1_1test_1_1kmeans__test_1aed100e56fc8ba1e0100629edc2ffc040" prot="public" virt="non-virtual"><scope>oneapi::dal::kmeans::test::kmeans_test</scope><name>check_train_result</name></member>
      <member refid="classoneapi_1_1dal_1_1kmeans_1_1test_1_1kmeans__test_1ac0a96194fc9ea22c1f9ef281cf2c9e61" prot="public" virt="non-virtual"><scope>oneapi::dal::kmeans::test::kmeans_test</scope><name>check_value_with_ref_tol</name></member>
      <member refid="classoneapi_1_1dal_1_1test_1_1engine_1_1crtp__base__algo__fixture_1a94f22290cc3d23e51bf7d30d569628ce" prot="public" virt="non-virtual"><scope>oneapi::dal::kmeans::test::kmeans_test</scope><name>compute</name></member>
      <member refid="classoneapi_1_1dal_1_1test_1_1engine_1_1crtp__base__algo__fixture_1a7512faf980955c840eda7d26ff607134" prot="public" virt="non-virtual"><scope>oneapi::dal::kmeans::test::kmeans_test</scope><name>compute_override</name></member>
      <member refid="classoneapi_1_1dal_1_1test_1_1engine_1_1crtp__algo__fixture_1afe2fd9a0e7f017a0593fc2e062f96280" prot="public" virt="non-virtual"><scope>oneapi::dal::kmeans::test::kmeans_test</scope><name>compute_via_spmd_threads</name></member>
      <member refid="classoneapi_1_1dal_1_1test_1_1engine_1_1crtp__algo__fixture_1a846e74572aabf08ac8ec1b55aa9865e7" prot="public" virt="non-virtual"><scope>oneapi::dal::kmeans::test::kmeans_test</scope><name>compute_via_spmd_threads_and_merge</name></member>
      <member refid="classoneapi_1_1dal_1_1kmeans_1_1test_1_1kmeans__test_1a53764981dcd42ebd9a03571922137f1b" prot="public" virt="non-virtual"><scope>oneapi::dal::kmeans::test::kmeans_test</scope><name>dbi_deterministic_checks</name></member>
      <member refid="classoneapi_1_1dal_1_1kmeans_1_1test_1_1kmeans__test_1a279057e1da46d2879d543e21c9091b63" prot="public" virt="non-virtual"><scope>oneapi::dal::kmeans::test::kmeans_test</scope><name>dbi_deterministic_checks_with_centroids</name></member>
      <member refid="classoneapi_1_1dal_1_1test_1_1engine_1_1crtp__base__algo__fixture_1ad89ea821951f979c65f34120555f1ebf" prot="public" virt="non-virtual"><scope>oneapi::dal::kmeans::test::kmeans_test</scope><name>derived</name></member>
      <member refid="classoneapi_1_1dal_1_1test_1_1engine_1_1crtp__base__algo__fixture_1a7a703a9d746f80d1f1bb684274e9054b" prot="public" virt="non-virtual"><scope>oneapi::dal::kmeans::test::kmeans_test</scope><name>derived_t</name></member>
      <member refid="classoneapi_1_1dal_1_1kmeans_1_1test_1_1kmeans__test_1ab3d720a1d69d12935d454e91ba37a86e" prot="public" virt="non-virtual"><scope>oneapi::dal::kmeans::test::kmeans_test</scope><name>descriptor_t</name></member>
      <member refid="classoneapi_1_1dal_1_1kmeans_1_1test_1_1kmeans__test_1a6d2e2d342bc45be32b5b1d17b33bbf73" prot="public" virt="non-virtual"><scope>oneapi::dal::kmeans::test::kmeans_test</scope><name>exact_checks</name></member>
      <member refid="classoneapi_1_1dal_1_1kmeans_1_1test_1_1kmeans__test_1a40418f0be409e8f2d1bb05d6d07ce6ae" prot="public" virt="non-virtual"><scope>oneapi::dal::kmeans::test::kmeans_test</scope><name>exact_checks_with_reordering</name></member>
      <member refid="classoneapi_1_1dal_1_1test_1_1engine_1_1crtp__base__algo__fixture_1a98e68b95a18f894c9705226a01f3619c" prot="public" virt="non-virtual"><scope>oneapi::dal::kmeans::test::kmeans_test</scope><name>finalize_compute</name></member>
      <member refid="classoneapi_1_1dal_1_1test_1_1engine_1_1crtp__base__algo__fixture_1af509567b3a24d60f43ac5e68225df6ea" prot="public" virt="non-virtual"><scope>oneapi::dal::kmeans::test::kmeans_test</scope><name>finalize_compute_override</name></member>
      <member refid="classoneapi_1_1dal_1_1test_1_1engine_1_1crtp__algo__fixture_1ab78b4384841a391350222d38a71989ca" prot="public" virt="non-virtual"><scope>oneapi::dal::kmeans::test::kmeans_test</scope><name>finalize_compute_via_spmd_threads</name></member>
      <member refid="classoneapi_1_1dal_1_1test_1_1engine_1_1crtp__algo__fixture_1a91ee6fceea739e3b3dde9a295f84fbbf" prot="public" virt="non-virtual"><scope>oneapi::dal::kmeans::test::kmeans_test</scope><name>finalize_compute_via_spmd_threads_and_merge</name></member>
      <member refid="classoneapi_1_1dal_1_1test_1_1engine_1_1crtp__base__algo__fixture_1a1ddff1057e1c77615717643fabd710da" prot="public" virt="non-virtual"><scope>oneapi::dal::kmeans::test::kmeans_test</scope><name>finalize_train</name></member>
      <member refid="classoneapi_1_1dal_1_1test_1_1engine_1_1crtp__base__algo__fixture_1ab63fb783388a7caab10158bbe1c4f320" prot="public" virt="non-virtual"><scope>oneapi::dal::kmeans::test::kmeans_test</scope><name>finalize_train_override</name></member>
      <member refid="classoneapi_1_1dal_1_1test_1_1engine_1_1crtp__algo__fixture_1a9fb19ae9f8ecaf3c4e521391fb560bde" prot="public" virt="non-virtual"><scope>oneapi::dal::kmeans::test::kmeans_test</scope><name>finalize_train_via_spmd_threads</name></member>
      <member refid="classoneapi_1_1dal_1_1test_1_1engine_1_1crtp__algo__fixture_1a6f7983b21f53d22485e6fef1af3bbf92" prot="public" virt="non-virtual"><scope>oneapi::dal::kmeans::test::kmeans_test</scope><name>finalize_train_via_spmd_threads_and_merge</name></member>
      <member refid="classoneapi_1_1dal_1_1kmeans_1_1test_1_1kmeans__test_1a18acf706081accf015f8d3e4e2a37eb7" prot="public" virt="non-virtual"><scope>oneapi::dal::kmeans::test::kmeans_test</scope><name>find_match_centroids</name></member>
      <member refid="classoneapi_1_1dal_1_1kmeans_1_1test_1_1kmeans__test_1ac326cc316db45ea7e8a439c7b06c4cb1" prot="public" virt="non-virtual"><scope>oneapi::dal::kmeans::test::kmeans_test</scope><name>float_t</name></member>
      <member refid="classoneapi_1_1dal_1_1kmeans_1_1test_1_1kmeans__test_1adc997f4ff5c934ad649bbcc5380abf20" prot="public" virt="non-virtual"><scope>oneapi::dal::kmeans::test::kmeans_test</scope><name>get_dense_descriptor</name></member>
      <member refid="classoneapi_1_1dal_1_1kmeans_1_1test_1_1kmeans__test_1a7d58302320c7cac6f02cc384f8a0dc4b" prot="public" virt="non-virtual"><scope>oneapi::dal::kmeans::test::kmeans_test</scope><name>get_descriptor</name></member>
      <member refid="classoneapi_1_1dal_1_1kmeans_1_1test_1_1kmeans__test_1a5239ecbb8c721dbde022a56d02a3650c" prot="public" virt="non-virtual"><scope>oneapi::dal::kmeans::test::kmeans_test</scope><name>get_descriptor</name></member>
      <member refid="classoneapi_1_1dal_1_1test_1_1engine_1_1float__algo__fixture_1a6be1d4cc18b35cecc28a4883638e9204" prot="public" virt="non-virtual"><scope>oneapi::dal::kmeans::test::kmeans_test</scope><name>get_homogen_table_id</name></member>
      <member refid="classoneapi_1_1dal_1_1test_1_1engine_1_1policy__fixture_1ad5b4f390efae39c68f92df90353b5ca8" prot="public" virt="non-virtual"><scope>oneapi::dal::kmeans::test::kmeans_test</scope><name>get_policy</name></member>
      <member refid="classoneapi_1_1dal_1_1test_1_1engine_1_1policy__fixture_1a2db053a584a93e0d852f86ee02750992" prot="public" virt="non-virtual"><scope>oneapi::dal::kmeans::test::kmeans_test</scope><name>get_queue</name></member>
      <member refid="classoneapi_1_1dal_1_1test_1_1engine_1_1crtp__base__algo__fixture_1a1769a758869aeeed2df2d90ad6c5bd7b" prot="public" virt="non-virtual"><scope>oneapi::dal::kmeans::test::kmeans_test</scope><name>infer</name></member>
      <member refid="classoneapi_1_1dal_1_1kmeans_1_1test_1_1kmeans__test_1a490de170a07b4565adb79c161901d9ef" prot="public" virt="non-virtual"><scope>oneapi::dal::kmeans::test::kmeans_test</scope><name>infer_checks</name></member>
      <member refid="classoneapi_1_1dal_1_1kmeans_1_1test_1_1kmeans__test_1a5a86145c6a9d7e87a2fcc1efefb25097" prot="public" virt="non-virtual"><scope>oneapi::dal::kmeans::test::kmeans_test</scope><name>infer_input_t</name></member>
      <member refid="classoneapi_1_1dal_1_1test_1_1engine_1_1crtp__base__algo__fixture_1a99902a786318586ae7135865bd37504a" prot="public" virt="non-virtual"><scope>oneapi::dal::kmeans::test::kmeans_test</scope><name>infer_override</name></member>
      <member refid="classoneapi_1_1dal_1_1kmeans_1_1test_1_1kmeans__test_1ae17550e7bc92fce0d247786d1f648d31" prot="public" virt="non-virtual"><scope>oneapi::dal::kmeans::test::kmeans_test</scope><name>infer_result_t</name></member>
      <member refid="classoneapi_1_1dal_1_1test_1_1engine_1_1crtp__algo__fixture_1afa99ce660b78dc6381d265d6bc5c0ac4" prot="public" virt="non-virtual"><scope>oneapi::dal::kmeans::test::kmeans_test</scope><name>infer_via_spmd_threads</name></member>
      <member refid="classoneapi_1_1dal_1_1test_1_1engine_1_1crtp__algo__fixture_1aab4216cdc871583a7ae486c5a3cbf34f" prot="public" virt="non-virtual"><scope>oneapi::dal::kmeans::test::kmeans_test</scope><name>infer_via_spmd_threads_and_merge</name></member>
      <member refid="classoneapi_1_1dal_1_1kmeans_1_1test_1_1kmeans__test_1a9c6ac8460e05fe7cfa4fec7f2b7c8a63" prot="public" virt="non-virtual"><scope>oneapi::dal::kmeans::test::kmeans_test</scope><name>is_sparse_method</name></member>
      <member refid="classoneapi_1_1dal_1_1test_1_1engine_1_1crtp__base__algo__fixture_1a163bd2487ff1fd422798cd3bd9fbbdb1" prot="public" virt="non-virtual"><scope>oneapi::dal::kmeans::test::kmeans_test</scope><name>merge_compute_result</name></member>
      <member refid="classoneapi_1_1dal_1_1test_1_1engine_1_1crtp__base__algo__fixture_1af0c5aa299637b51f9f770fd5318149f2" prot="public" virt="non-virtual"><scope>oneapi::dal::kmeans::test::kmeans_test</scope><name>merge_compute_result_override</name></member>
      <member refid="classoneapi_1_1dal_1_1test_1_1engine_1_1crtp__base__algo__fixture_1a14cc53d7c932692aa33e4ddff6937437" prot="public" virt="non-virtual"><scope>oneapi::dal::kmeans::test::kmeans_test</scope><name>merge_finalize_compute_result</name></member>
      <member refid="classoneapi_1_1dal_1_1test_1_1engine_1_1crtp__base__algo__fixture_1a3411c600dcc18c2fcff5930e43474ed9" prot="public" virt="non-virtual"><scope>oneapi::dal::kmeans::test::kmeans_test</scope><name>merge_finalize_compute_result_override</name></member>
      <member refid="classoneapi_1_1dal_1_1test_1_1engine_1_1crtp__base__algo__fixture_1aab5e6e48d85bec4329368ff5ab783234" prot="public" virt="non-virtual"><scope>oneapi::dal::kmeans::test::kmeans_test</scope><name>merge_finalize_train_result</name></member>
      <member refid="classoneapi_1_1dal_1_1test_1_1engine_1_1crtp__base__algo__fixture_1aa7f33d78b74650dd71d9512e5e6213ae" prot="public" virt="non-virtual"><scope>oneapi::dal::kmeans::test::kmeans_test</scope><name>merge_infer_result</name></member>
      <member refid="classoneapi_1_1dal_1_1test_1_1engine_1_1crtp__base__algo__fixture_1a46370c114f72f7cbf3e12022f1e8ea94" prot="public" virt="non-virtual"><scope>oneapi::dal::kmeans::test::kmeans_test</scope><name>merge_infer_result_override</name></member>
      <member refid="classoneapi_1_1dal_1_1test_1_1engine_1_1crtp__base__algo__fixture_1a928e7542d7a3f0bdb9bf71ec1fac1314" prot="public" virt="non-virtual"><scope>oneapi::dal::kmeans::test::kmeans_test</scope><name>merge_train_result</name></member>
      <member refid="classoneapi_1_1dal_1_1test_1_1engine_1_1crtp__base__algo__fixture_1a96895ee7ca7beb657d42d7f44cc0e505" prot="public" virt="non-virtual"><scope>oneapi::dal::kmeans::test::kmeans_test</scope><name>merge_train_result_override</name></member>
      <member refid="classoneapi_1_1dal_1_1kmeans_1_1test_1_1kmeans__test_1a8f837853131c68aace349d86d5190e55" prot="public" virt="non-virtual"><scope>oneapi::dal::kmeans::test::kmeans_test</scope><name>method_t</name></member>
      <member refid="classoneapi_1_1dal_1_1kmeans_1_1test_1_1kmeans__test_1a12e8a95f0ce94471ece5dd511264e37e" prot="public" virt="non-virtual"><scope>oneapi::dal::kmeans::test::kmeans_test</scope><name>model_t</name></member>
      <member refid="classoneapi_1_1dal_1_1test_1_1engine_1_1float__algo__fixture_1a7ae0ebe89b0dc86c3febaead54efdd44" prot="public" virt="non-virtual"><scope>oneapi::dal::kmeans::test::kmeans_test</scope><name>not_float64_friendly</name></member>
      <member refid="classoneapi_1_1dal_1_1kmeans_1_1test_1_1kmeans__test_1a8b69d3bf205927de771b0b124976eee2" prot="public" virt="non-virtual"><scope>oneapi::dal::kmeans::test::kmeans_test</scope><name>optional_results_dbi_deterministic_checks</name></member>
      <member refid="classoneapi_1_1dal_1_1kmeans_1_1test_1_1kmeans__test_1a10e31bc1ba911b962d51b64c4cd24d9a" prot="public" virt="non-virtual"><scope>oneapi::dal::kmeans::test::kmeans_test</scope><name>partial_centroids_stress_test</name></member>
      <member refid="classoneapi_1_1dal_1_1test_1_1engine_1_1crtp__base__algo__fixture_1ac3c45f1572b279a5d6f74a6548d0a104" prot="public" virt="non-virtual"><scope>oneapi::dal::kmeans::test::kmeans_test</scope><name>partial_compute</name></member>
      <member refid="classoneapi_1_1dal_1_1test_1_1engine_1_1crtp__base__algo__fixture_1a8d74106df88dca7a52c1e0efd268617e" prot="public" virt="non-virtual"><scope>oneapi::dal::kmeans::test::kmeans_test</scope><name>partial_compute_override</name></member>
      <member refid="classoneapi_1_1dal_1_1test_1_1engine_1_1crtp__base__algo__fixture_1a6d64f595fca38a8c16bce504ce20b0c2" prot="public" virt="non-virtual"><scope>oneapi::dal::kmeans::test::kmeans_test</scope><name>partial_train</name></member>
      <member refid="classoneapi_1_1dal_1_1test_1_1engine_1_1crtp__base__algo__fixture_1a376eff5b483f54b63c186b7c294fd950" prot="public" virt="non-virtual"><scope>oneapi::dal::kmeans::test::kmeans_test</scope><name>partial_train_override</name></member>
      <member refid="classoneapi_1_1dal_1_1test_1_1engine_1_1algo__fixture_1afcb54598e7c58188a35c3eb79d54bed4" prot="public" virt="non-virtual"><scope>oneapi::dal::kmeans::test::kmeans_test</scope><name>partial_train_with_parameters</name></member>
      <member refid="classoneapi_1_1dal_1_1test_1_1engine_1_1crtp__base__algo__fixture_1a815bc11016e94bfc56362972bf4899c3" prot="public" virt="non-virtual"><scope>oneapi::dal::kmeans::test::kmeans_test</scope><name>split_compute_input</name></member>
      <member refid="classoneapi_1_1dal_1_1test_1_1engine_1_1crtp__base__algo__fixture_1a681ab37ab9bbb635dfda6c3e32093216" prot="public" virt="non-virtual"><scope>oneapi::dal::kmeans::test::kmeans_test</scope><name>split_compute_input_override</name></member>
      <member refid="classoneapi_1_1dal_1_1test_1_1engine_1_1crtp__base__algo__fixture_1a59f28edc3d1d2dc30eae5d23c2f6ced0" prot="public" virt="non-virtual"><scope>oneapi::dal::kmeans::test::kmeans_test</scope><name>split_finalize_compute_input</name></member>
      <member refid="classoneapi_1_1dal_1_1test_1_1engine_1_1crtp__base__algo__fixture_1a4a3cdda7f9b045718e8119c1130d96b7" prot="public" virt="non-virtual"><scope>oneapi::dal::kmeans::test::kmeans_test</scope><name>split_finalize_compute_input_override</name></member>
      <member refid="classoneapi_1_1dal_1_1test_1_1engine_1_1crtp__base__algo__fixture_1ae8f43835cbbdafdfd1006ac4bcf1b002" prot="public" virt="non-virtual"><scope>oneapi::dal::kmeans::test::kmeans_test</scope><name>split_finalize_train_input</name></member>
      <member refid="classoneapi_1_1dal_1_1test_1_1engine_1_1crtp__base__algo__fixture_1a15b054f68d10cca541ef19f3c93aedc9" prot="public" virt="non-virtual"><scope>oneapi::dal::kmeans::test::kmeans_test</scope><name>split_infer_input</name></member>
      <member refid="classoneapi_1_1dal_1_1test_1_1engine_1_1crtp__base__algo__fixture_1a3be0322fad50f3ff364db8673245e6e9" prot="public" virt="non-virtual"><scope>oneapi::dal::kmeans::test::kmeans_test</scope><name>split_infer_input_override</name></member>
      <member refid="classoneapi_1_1dal_1_1test_1_1engine_1_1crtp__base__algo__fixture_1a817835eeb02cc5122cc38408d5f46c14" prot="public" virt="non-virtual"><scope>oneapi::dal::kmeans::test::kmeans_test</scope><name>split_train_input</name></member>
      <member refid="classoneapi_1_1dal_1_1test_1_1engine_1_1crtp__base__algo__fixture_1abc343e4dec6108c883424787bf6ca4e6" prot="public" virt="non-virtual"><scope>oneapi::dal::kmeans::test::kmeans_test</scope><name>split_train_input_override</name></member>
      <member refid="classoneapi_1_1dal_1_1kmeans_1_1test_1_1kmeans__test_1aa1d85638dfa7ad27c70e3f7b306efa2b" prot="public" virt="non-virtual"><scope>oneapi::dal::kmeans::test::kmeans_test</scope><name>squared_euclidian_distance</name></member>
      <member refid="classoneapi_1_1dal_1_1kmeans_1_1test_1_1kmeans__test_1a63690220c0f3e9216358fa69d8ccba82" prot="public" virt="non-virtual"><scope>oneapi::dal::kmeans::test::kmeans_test</scope><name>task_t</name></member>
      <member refid="classoneapi_1_1dal_1_1kmeans_1_1test_1_1kmeans__test_1a0c142b55f13363dd0f171a04214379cd" prot="public" virt="non-virtual"><scope>oneapi::dal::kmeans::test::kmeans_test</scope><name>test_on_dataset</name></member>
      <member refid="classoneapi_1_1dal_1_1kmeans_1_1test_1_1kmeans__test_1a2ea2e1669cca291a804f4dd93fea2902" prot="public" virt="non-virtual"><scope>oneapi::dal::kmeans::test::kmeans_test</scope><name>test_on_sparse_data</name></member>
      <member refid="classoneapi_1_1dal_1_1kmeans_1_1test_1_1kmeans__test_1a10b4ebf8836191d51d04db5114528154" prot="public" virt="non-virtual"><scope>oneapi::dal::kmeans::test::kmeans_test</scope><name>test_optional_results_on_dataset</name></member>
      <member refid="classoneapi_1_1dal_1_1test_1_1engine_1_1crtp__base__algo__fixture_1a78b584fe4368d4320992381407f46b5c" prot="public" virt="non-virtual"><scope>oneapi::dal::kmeans::test::kmeans_test</scope><name>train</name></member>
      <member refid="classoneapi_1_1dal_1_1kmeans_1_1test_1_1kmeans__test_1a91bf68c82b18a6c38b0dcb2b58089fd7" prot="public" virt="non-virtual"><scope>oneapi::dal::kmeans::test::kmeans_test</scope><name>train_input_t</name></member>
      <member refid="classoneapi_1_1dal_1_1test_1_1engine_1_1crtp__base__algo__fixture_1ae66f1418bb3c5e55678da710125bebef" prot="public" virt="non-virtual"><scope>oneapi::dal::kmeans::test::kmeans_test</scope><name>train_override</name></member>
      <member refid="classoneapi_1_1dal_1_1kmeans_1_1test_1_1kmeans__test_1a6ce0fde48b499b78f942c5f8715e7d81" prot="public" virt="non-virtual"><scope>oneapi::dal::kmeans::test::kmeans_test</scope><name>train_result_t</name></member>
      <member refid="classoneapi_1_1dal_1_1test_1_1engine_1_1crtp__algo__fixture_1a3bc6bb64c716348cea45a78f281843be" prot="public" virt="non-virtual"><scope>oneapi::dal::kmeans::test::kmeans_test</scope><name>train_via_spmd_threads</name></member>
      <member refid="classoneapi_1_1dal_1_1test_1_1engine_1_1crtp__algo__fixture_1a9fc841dae09ff56d51ecdeeb678139dd" prot="public" virt="non-virtual"><scope>oneapi::dal::kmeans::test::kmeans_test</scope><name>train_via_spmd_threads_and_merge</name></member>
      <member refid="classoneapi_1_1dal_1_1kmeans_1_1test_1_1kmeans__test_1a8436bba5aaa0f6782bb951279f845c18" prot="public" virt="non-virtual"><scope>oneapi::dal::kmeans::test::kmeans_test</scope><name>train_with_initialization_checks</name></member>
      <member refid="classoneapi_1_1dal_1_1test_1_1engine_1_1algo__fixture_1a596f6a2f2ffff25aa8ffa9b4151f7257" prot="public" virt="non-virtual"><scope>oneapi::dal::kmeans::test::kmeans_test</scope><name>train_with_parameters</name></member>
      <member refid="classoneapi_1_1dal_1_1kmeans_1_1test_1_1kmeans__test_1a365bce077f29808de4de341fa71fabe8" prot="public" virt="non-virtual"><scope>oneapi::dal::kmeans::test::kmeans_test</scope><name>unpack_result</name></member>
      <member refid="classoneapi_1_1dal_1_1kmeans_1_1test_1_1kmeans__test_1aa62deeafe81097641e6370aff97a41cb" prot="public" virt="non-virtual"><scope>oneapi::dal::kmeans::test::kmeans_test</scope><name>unpack_result</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
