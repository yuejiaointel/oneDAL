<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="namespaceoneapi_1_1dal_1_1svm_1_1detail_1_1v1" kind="namespace" language="C++">
    <compoundname>oneapi::dal::svm::detail::v1</compoundname>
    <innerclass refid="classoneapi_1_1dal_1_1svm_1_1detail_1_1v1_1_1descriptor__base" prot="public">oneapi::dal::svm::detail::v1::descriptor_base</innerclass>
    <innerclass refid="classoneapi_1_1dal_1_1svm_1_1detail_1_1v1_1_1descriptor__impl" prot="public">oneapi::dal::svm::detail::v1::descriptor_impl</innerclass>
    <innerclass refid="structoneapi_1_1dal_1_1svm_1_1detail_1_1v1_1_1descriptor__tag" prot="public">oneapi::dal::svm::detail::v1::descriptor_tag</innerclass>
    <innerclass refid="classoneapi_1_1dal_1_1svm_1_1detail_1_1v1_1_1infer__input__impl" prot="public">oneapi::dal::svm::detail::v1::infer_input_impl</innerclass>
    <innerclass refid="classoneapi_1_1dal_1_1svm_1_1detail_1_1v1_1_1infer__result__impl" prot="public">oneapi::dal::svm::detail::v1::infer_result_impl</innerclass>
    <innerclass refid="classoneapi_1_1dal_1_1svm_1_1detail_1_1v1_1_1model__impl" prot="public">oneapi::dal::svm::detail::v1::model_impl</innerclass>
    <innerclass refid="classoneapi_1_1dal_1_1svm_1_1detail_1_1v1_1_1train__input__impl" prot="public">oneapi::dal::svm::detail::v1::train_input_impl</innerclass>
    <innerclass refid="classoneapi_1_1dal_1_1svm_1_1detail_1_1v1_1_1train__result__impl" prot="public">oneapi::dal::svm::detail::v1::train_result_impl</innerclass>
    <sectiondef kind="typedef">
      <memberdef kind="typedef" id="algo_2svm_2common_8hpp_1ab71b19443d4a6dde02a9bdd39931f790" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>std::enable_if_t&lt; dal::detail::is_one_of_v&lt; T, <ref refid="structoneapi_1_1dal_1_1svm_1_1task_1_1v1_1_1classification" kindref="compound">task::classification</ref>, <ref refid="structoneapi_1_1dal_1_1svm_1_1task_1_1v1_1_1nu__classification" kindref="compound">task::nu_classification</ref> &gt; &gt;</type>
        <definition>using enable_if_classification_t =  std::enable_if_t&lt;dal::detail::is_one_of_v&lt;T, task::classification, task::nu_classification&gt; &gt;</definition>
        <argsstring></argsstring>
        <name>enable_if_classification_t</name>
        <qualifiedname>oneapi::dal::svm::detail::v1::enable_if_classification_t</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/oneDAL/oneDAL/cpp/oneapi/dal/algo/svm/common.hpp" line="89" column="1" bodyfile="/home/runner/work/oneDAL/oneDAL/cpp/oneapi/dal/algo/svm/common.hpp" bodystart="90" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="algo_2svm_2common_8hpp_1a41ea83714527e59e48ad0eec17df741e" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>std::enable_if_t&lt; dal::detail::is_one_of_v&lt; T, <ref refid="structoneapi_1_1dal_1_1svm_1_1task_1_1v1_1_1regression" kindref="compound">task::regression</ref>, <ref refid="structoneapi_1_1dal_1_1svm_1_1task_1_1v1_1_1nu__regression" kindref="compound">task::nu_regression</ref> &gt; &gt;</type>
        <definition>using enable_if_regression_t =  std::enable_if_t&lt;dal::detail::is_one_of_v&lt;T, task::regression, task::nu_regression&gt; &gt;</definition>
        <argsstring></argsstring>
        <name>enable_if_regression_t</name>
        <qualifiedname>oneapi::dal::svm::detail::v1::enable_if_regression_t</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/oneDAL/oneDAL/cpp/oneapi/dal/algo/svm/common.hpp" line="93" column="1" bodyfile="/home/runner/work/oneDAL/oneDAL/cpp/oneapi/dal/algo/svm/common.hpp" bodystart="94" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="algo_2svm_2common_8hpp_1a334452e294f971f7e3f85b91e2eba482" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>std::enable_if_t&lt; dal::detail::is_one_of_v&lt; T, <ref refid="structoneapi_1_1dal_1_1svm_1_1task_1_1v1_1_1nu__classification" kindref="compound">task::nu_classification</ref>, <ref refid="structoneapi_1_1dal_1_1svm_1_1task_1_1v1_1_1nu__regression" kindref="compound">task::nu_regression</ref> &gt; &gt;</type>
        <definition>using enable_if_nu_task_t =  std::enable_if_t&lt;dal::detail::is_one_of_v&lt;T, task::nu_classification, task::nu_regression&gt; &gt;</definition>
        <argsstring></argsstring>
        <name>enable_if_nu_task_t</name>
        <qualifiedname>oneapi::dal::svm::detail::v1::enable_if_nu_task_t</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/oneDAL/oneDAL/cpp/oneapi/dal/algo/svm/common.hpp" line="97" column="1" bodyfile="/home/runner/work/oneDAL/oneDAL/cpp/oneapi/dal/algo/svm/common.hpp" bodystart="98" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="algo_2svm_2common_8hpp_1a2f643c7d842e6feefd8964f73600ee4f" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>std::enable_if_t&lt; dal::detail::is_one_of_v&lt; T, <ref refid="structoneapi_1_1dal_1_1svm_1_1task_1_1v1_1_1classification" kindref="compound">task::classification</ref>, <ref refid="structoneapi_1_1dal_1_1svm_1_1task_1_1v1_1_1regression" kindref="compound">task::regression</ref>, <ref refid="structoneapi_1_1dal_1_1svm_1_1task_1_1v1_1_1nu__regression" kindref="compound">task::nu_regression</ref> &gt; &gt;</type>
        <definition>using enable_if_c_available_t =  std::enable_if_t&lt; dal::detail::is_one_of_v&lt;T, task::classification, task::regression, task::nu_regression&gt; &gt;</definition>
        <argsstring></argsstring>
        <name>enable_if_c_available_t</name>
        <qualifiedname>oneapi::dal::svm::detail::v1::enable_if_c_available_t</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/oneDAL/oneDAL/cpp/oneapi/dal/algo/svm/common.hpp" line="101" column="1" bodyfile="/home/runner/work/oneDAL/oneDAL/cpp/oneapi/dal/algo/svm/common.hpp" bodystart="102" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="algo_2svm_2common_8hpp_1ab3dd1953fc236d05a3f199dd876033cd" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>std::enable_if_t&lt; std::is_same_v&lt; std::decay_t&lt; T &gt;, <ref refid="structoneapi_1_1dal_1_1svm_1_1task_1_1v1_1_1regression" kindref="compound">task::regression</ref> &gt; &gt;</type>
        <definition>using enable_if_epsilon_available_t =  std::enable_if_t&lt;std::is_same_v&lt;std::decay_t&lt;T&gt;, task::regression&gt; &gt;</definition>
        <argsstring></argsstring>
        <name>enable_if_epsilon_available_t</name>
        <qualifiedname>oneapi::dal::svm::detail::v1::enable_if_epsilon_available_t</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/oneDAL/oneDAL/cpp/oneapi/dal/algo/svm/common.hpp" line="105" column="1" bodyfile="/home/runner/work/oneDAL/oneDAL/cpp/oneapi/dal/algo/svm/common.hpp" bodystart="106" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="var">
      <memberdef kind="variable" id="algo_2svm_2common_8hpp_1a47508ff2562d529231dda47b677a7a89" prot="public" static="no" constexpr="yes" mutable="no">
        <templateparamlist>
          <param>
            <type>typename Float</type>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>constexpr bool is_valid_float_v</definition>
        <argsstring></argsstring>
        <name>is_valid_float_v</name>
        <qualifiedname>oneapi::dal::svm::detail::v1::is_valid_float_v</qualifiedname>
        <initializer>= dal::detail::is_one_of_v&lt;Float, float, double&gt;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/oneDAL/oneDAL/cpp/oneapi/dal/algo/svm/common.hpp" line="109" column="16" bodyfile="/home/runner/work/oneDAL/oneDAL/cpp/oneapi/dal/algo/svm/common.hpp" bodystart="109" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="algo_2svm_2common_8hpp_1a801c5424efd3b7ec2f014ec5024a0830" prot="public" static="no" constexpr="yes" mutable="no">
        <templateparamlist>
          <param>
            <type>typename Method</type>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>constexpr bool is_valid_method_v</definition>
        <argsstring></argsstring>
        <name>is_valid_method_v</name>
        <qualifiedname>oneapi::dal::svm::detail::v1::is_valid_method_v</qualifiedname>
        <initializer>= dal::detail::is_one_of_v&lt;Method, <ref refid="structoneapi_1_1dal_1_1svm_1_1method_1_1v1_1_1smo" kindref="compound">method::smo</ref>, <ref refid="structoneapi_1_1dal_1_1svm_1_1method_1_1v1_1_1thunder" kindref="compound">method::thunder</ref>&gt;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/oneDAL/oneDAL/cpp/oneapi/dal/algo/svm/common.hpp" line="112" column="16" bodyfile="/home/runner/work/oneDAL/oneDAL/cpp/oneapi/dal/algo/svm/common.hpp" bodystart="112" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="algo_2svm_2common_8hpp_1a7d5b5b6385d2e3afa0bdc62e9038eaf3" prot="public" static="no" constexpr="yes" mutable="no">
        <templateparamlist>
          <param>
            <type>typename Task</type>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>constexpr bool is_valid_task_v</definition>
        <argsstring></argsstring>
        <name>is_valid_task_v</name>
        <qualifiedname>oneapi::dal::svm::detail::v1::is_valid_task_v</qualifiedname>
        <initializer>= dal::detail::is_one_of_v&lt;Task,
                                                          <ref refid="structoneapi_1_1dal_1_1svm_1_1task_1_1v1_1_1classification" kindref="compound">task::classification</ref>,
                                                          <ref refid="structoneapi_1_1dal_1_1svm_1_1task_1_1v1_1_1regression" kindref="compound">task::regression</ref>,
                                                          <ref refid="structoneapi_1_1dal_1_1svm_1_1task_1_1v1_1_1nu__classification" kindref="compound">task::nu_classification</ref>,
                                                          <ref refid="structoneapi_1_1dal_1_1svm_1_1task_1_1v1_1_1nu__regression" kindref="compound">task::nu_regression</ref>&gt;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/oneDAL/oneDAL/cpp/oneapi/dal/algo/svm/common.hpp" line="115" column="16" bodyfile="/home/runner/work/oneDAL/oneDAL/cpp/oneapi/dal/algo/svm/common.hpp" bodystart="115" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="algo_2svm_2common_8hpp_1aea65c7f9621126d941708cc4e1225675" prot="public" static="no" constexpr="yes" mutable="no">
        <templateparamlist>
          <param>
            <type>typename Method</type>
          </param>
          <param>
            <type>typename Task</type>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>constexpr bool is_valid_method_task_combination</definition>
        <argsstring></argsstring>
        <name>is_valid_method_task_combination</name>
        <qualifiedname>oneapi::dal::svm::detail::v1::is_valid_method_task_combination</qualifiedname>
        <initializer>= dal::detail::is_one_of_v&lt;Method, <ref refid="structoneapi_1_1dal_1_1svm_1_1method_1_1v1_1_1smo" kindref="compound">method::smo</ref>&gt;
    &amp;&amp;dal::detail::is_one_of_v&lt;Task, <ref refid="structoneapi_1_1dal_1_1svm_1_1task_1_1v1_1_1regression" kindref="compound">task::regression</ref>&gt;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/oneDAL/oneDAL/cpp/oneapi/dal/algo/svm/common.hpp" line="122" column="16" bodyfile="/home/runner/work/oneDAL/oneDAL/cpp/oneapi/dal/algo/svm/common.hpp" bodystart="122" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="algo_2svm_2common_8hpp_1a9386520fca1b7dd064eb6b0bff34a14c" prot="public" static="no" constexpr="yes" mutable="no">
        <templateparamlist>
          <param>
            <type>typename Method</type>
          </param>
          <param>
            <type>typename Task</type>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>constexpr bool is_valid_method_nu_task_combination</definition>
        <argsstring></argsstring>
        <name>is_valid_method_nu_task_combination</name>
        <qualifiedname>oneapi::dal::svm::detail::v1::is_valid_method_nu_task_combination</qualifiedname>
        <initializer>= dal::detail::is_one_of_v&lt;Method, <ref refid="structoneapi_1_1dal_1_1svm_1_1method_1_1v1_1_1smo" kindref="compound">method::smo</ref>&gt;
    &amp;&amp;dal::detail::is_one_of_v&lt;Task, <ref refid="structoneapi_1_1dal_1_1svm_1_1task_1_1v1_1_1nu__classification" kindref="compound">task::nu_classification</ref>, <ref refid="structoneapi_1_1dal_1_1svm_1_1task_1_1v1_1_1nu__regression" kindref="compound">task::nu_regression</ref>&gt;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/oneDAL/oneDAL/cpp/oneapi/dal/algo/svm/common.hpp" line="126" column="16" bodyfile="/home/runner/work/oneDAL/oneDAL/cpp/oneapi/dal/algo/svm/common.hpp" bodystart="126" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="algo_2svm_2common_8hpp_1ac01477d1efd304020490d36725a241c7" prot="public" static="no" constexpr="yes" mutable="no">
        <templateparamlist>
          <param>
            <type>typename Kernel</type>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>constexpr bool is_valid_kernel_v</definition>
        <argsstring></argsstring>
        <name>is_valid_kernel_v</name>
        <qualifiedname>oneapi::dal::svm::detail::v1::is_valid_kernel_v</qualifiedname>
        <initializer>=
    dal::detail::is_tag_one_of_v&lt;Kernel,
                                 <ref refid="structoneapi_1_1dal_1_1linear__kernel_1_1detail_1_1v1_1_1descriptor__tag" kindref="compound">linear_kernel::detail::descriptor_tag</ref>,
                                 <ref refid="structoneapi_1_1dal_1_1polynomial__kernel_1_1detail_1_1v1_1_1descriptor__tag" kindref="compound">polynomial_kernel::detail::descriptor_tag</ref>,
                                 <ref refid="structoneapi_1_1dal_1_1rbf__kernel_1_1detail_1_1v1_1_1descriptor__tag" kindref="compound">rbf_kernel::detail::descriptor_tag</ref>,
                                 <ref refid="structoneapi_1_1dal_1_1sigmoid__kernel_1_1detail_1_1v1_1_1descriptor__tag" kindref="compound">sigmoid_kernel::detail::descriptor_tag</ref>&gt;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/oneDAL/oneDAL/cpp/oneapi/dal/algo/svm/common.hpp" line="130" column="16" bodyfile="/home/runner/work/oneDAL/oneDAL/cpp/oneapi/dal/algo/svm/common.hpp" bodystart="130" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/oneDAL/oneDAL/cpp/oneapi/dal/algo/svm/common.hpp" line="79" column="1"/>
  </compounddef>
</doxygen>
