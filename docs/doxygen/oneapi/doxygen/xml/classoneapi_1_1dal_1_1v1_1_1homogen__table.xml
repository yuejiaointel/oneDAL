<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classoneapi_1_1dal_1_1v1_1_1homogen__table" kind="class" language="C++" prot="public">
    <compoundname>oneapi::dal::v1::homogen_table</compoundname>
    <basecompoundref refid="classoneapi_1_1dal_1_1v1_1_1table" prot="public" virt="non-virtual">table</basecompoundref>
    <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classoneapi_1_1dal_1_1v1_1_1homogen__table_1a9ab6fb97fb3e9768781054d12edbaec5" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::int64_t</type>
        <definition>static std::int64_t kind</definition>
        <argsstring>()</argsstring>
        <name>kind</name>
        <qualifiedname>oneapi::dal::v1::homogen_table::kind</qualifiedname>
        <briefdescription>
<para>Returns the unique id of <computeroutput><ref refid="classoneapi_1_1dal_1_1v1_1_1homogen__table" kindref="compound">homogen_table</ref></computeroutput> class. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/oneDAL/oneDAL/cpp/oneapi/dal/table/homogen.hpp" line="30" column="25"/>
      </memberdef>
      <memberdef kind="function" id="classoneapi_1_1dal_1_1v1_1_1homogen__table_1a3fcad1ea70dfade4b05e658b0baf53bc" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Data</type>
          </param>
        </templateparamlist>
        <type><ref refid="classoneapi_1_1dal_1_1v1_1_1homogen__table" kindref="compound">homogen_table</ref></type>
        <definition>static homogen_table wrap</definition>
        <argsstring>(const Data *data_pointer, std::int64_t row_count, std::int64_t column_count, data_layout layout=data_layout::row_major)</argsstring>
        <name>wrap</name>
        <qualifiedname>oneapi::dal::v1::homogen_table::wrap</qualifiedname>
        <param>
          <type>const Data *</type>
          <declname>data_pointer</declname>
        </param>
        <param>
          <type>std::int64_t</type>
          <declname>row_count</declname>
        </param>
        <param>
          <type>std::int64_t</type>
          <declname>column_count</declname>
        </param>
        <param>
          <type>data_layout</type>
          <declname>layout</declname>
          <defval>data_layout::row_major</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Creates a new <computeroutput><ref refid="classoneapi_1_1dal_1_1v1_1_1homogen__table" kindref="compound">homogen_table</ref></computeroutput> instance from externally-defined data block. Table object refers to the data but does not own it. The responsibility to free the data remains on the user side. The :literal:<computeroutput>data</computeroutput> should point to the <computeroutput>data_pointer</computeroutput> memory block.</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>Data</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of elements in the data block that will be stored into the table. The table initializes data types of metadata with this data type. The feature types should be set to default values for :literal:<computeroutput>Data</computeroutput> type: contiguous for floating-point, ordinal for integer types. The :literal:<computeroutput>Data</computeroutput> type should be at least :expr:<computeroutput>float</computeroutput>, :expr:<computeroutput>double</computeroutput> or :expr:<computeroutput>std::int32_t</computeroutput>.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data_pointer</parametername>
</parameternamelist>
<parameterdescription>
<para>The pointer to a homogeneous data block. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>row_count</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of rows in the table. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>column_count</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of columns in the table. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>layout</parametername>
</parameternamelist>
<parameterdescription>
<para>The layout of the data. Should be :literal:<computeroutput>data_layout::row_major</computeroutput> or :literal:<computeroutput>data_layout::column_major</computeroutput>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/oneDAL/oneDAL/cpp/oneapi/dal/table/homogen.hpp" line="49" column="26" bodyfile="/home/runner/work/oneDAL/oneDAL/cpp/oneapi/dal/table/homogen.hpp" bodystart="49" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="classoneapi_1_1dal_1_1v1_1_1homogen__table_1ac97969f14426eadcf125f107cce9f831" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Data</type>
          </param>
        </templateparamlist>
        <type><ref refid="classoneapi_1_1dal_1_1v1_1_1homogen__table" kindref="compound">homogen_table</ref></type>
        <definition>static homogen_table wrap</definition>
        <argsstring>(const sycl::queue &amp;queue, const Data *data_pointer, std::int64_t row_count, std::int64_t column_count, const std::vector&lt; sycl::event &gt; &amp;dependencies={}, data_layout layout=data_layout::row_major)</argsstring>
        <name>wrap</name>
        <qualifiedname>oneapi::dal::v1::homogen_table::wrap</qualifiedname>
        <param>
          <type>const sycl::queue &amp;</type>
          <declname>queue</declname>
        </param>
        <param>
          <type>const Data *</type>
          <declname>data_pointer</declname>
        </param>
        <param>
          <type>std::int64_t</type>
          <declname>row_count</declname>
        </param>
        <param>
          <type>std::int64_t</type>
          <declname>column_count</declname>
        </param>
        <param>
          <type>const std::vector&lt; sycl::event &gt; &amp;</type>
          <declname>dependencies</declname>
          <defval>{}</defval>
        </param>
        <param>
          <type>data_layout</type>
          <declname>layout</declname>
          <defval>data_layout::row_major</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Creates a new <computeroutput><ref refid="classoneapi_1_1dal_1_1v1_1_1homogen__table" kindref="compound">homogen_table</ref></computeroutput> instance from externally-defined data block. Table object refers to the data but does not own it. The responsibility to free the data remains on the user side. The :literal:<computeroutput>data</computeroutput> should point to the <computeroutput>data_pointer</computeroutput> memory block.</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>Data</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of elements in the data block that will be stored into the table. The table initializes data types of metadata with this data type. The feature types should be set to default values for :literal:<computeroutput>Data</computeroutput> type: contiguous for floating-point, ordinal for integer types. The :literal:<computeroutput>Data</computeroutput> type should be at least :expr:<computeroutput>float</computeroutput>, :expr:<computeroutput>double</computeroutput> or :expr:<computeroutput>std::int32_t</computeroutput>.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>queue</parametername>
</parameternamelist>
<parameterdescription>
<para>The SYCL* queue object </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data_pointer</parametername>
</parameternamelist>
<parameterdescription>
<para>The pointer to a homogeneous data block. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>row_count</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of rows in the table. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>column_count</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of columns in the table. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dependencies</parametername>
</parameternamelist>
<parameterdescription>
<para>Events indicating availability of the :literal:<computeroutput>Data</computeroutput> for reading or writing. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>layout</parametername>
</parameternamelist>
<parameterdescription>
<para>The layout of the data. Should be :literal:<computeroutput>data_layout::row_major</computeroutput> or :literal:<computeroutput>data_layout::column_major</computeroutput>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/oneDAL/oneDAL/cpp/oneapi/dal/table/homogen.hpp" line="80" column="26" bodyfile="/home/runner/work/oneDAL/oneDAL/cpp/oneapi/dal/table/homogen.hpp" bodystart="80" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="classoneapi_1_1dal_1_1v1_1_1homogen__table_1aab6083367fcd534e9ece2a5453b60e4b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Data</type>
          </param>
        </templateparamlist>
        <type><ref refid="classoneapi_1_1dal_1_1v1_1_1homogen__table" kindref="compound">homogen_table</ref></type>
        <definition>static homogen_table wrap</definition>
        <argsstring>(const dal::array&lt; Data &gt; &amp;data, std::int64_t row_count, std::int64_t column_count, data_layout layout=data_layout::row_major)</argsstring>
        <name>wrap</name>
        <qualifiedname>oneapi::dal::v1::homogen_table::wrap</qualifiedname>
        <param>
          <type>const <ref refid="classoneapi_1_1dal_1_1v2_1_1array" kindref="compound">dal::array</ref>&lt; Data &gt; &amp;</type>
          <declname>data</declname>
        </param>
        <param>
          <type>std::int64_t</type>
          <declname>row_count</declname>
        </param>
        <param>
          <type>std::int64_t</type>
          <declname>column_count</declname>
        </param>
        <param>
          <type>data_layout</type>
          <declname>layout</declname>
          <defval>data_layout::row_major</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Creates a new <computeroutput><ref refid="classoneapi_1_1dal_1_1v1_1_1homogen__table" kindref="compound">homogen_table</ref></computeroutput> instance from an array. The created table shares data ownership with the given array.</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>Data</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of elements in the data block that will be stored into the table. The table initializes data types of metadata with this data type. The feature types should be set to default values for :literal:<computeroutput>Data</computeroutput> type: contiguous for floating-point, ordinal for integer types. The :literal:<computeroutput>Data</computeroutput> type should be at least :expr:<computeroutput>float</computeroutput>, :expr:<computeroutput>double</computeroutput> or :expr:<computeroutput>std::int32_t</computeroutput>.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>The array that stores a homogeneous data block. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>row_count</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of rows in the table. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>column_count</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of columns in the table. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>layout</parametername>
</parameternamelist>
<parameterdescription>
<para>The layout of the data. Should be :literal:<computeroutput>data_layout::row_major</computeroutput> or :literal:<computeroutput>data_layout::column_major</computeroutput>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/oneDAL/oneDAL/cpp/oneapi/dal/table/homogen.hpp" line="111" column="26" bodyfile="/home/runner/work/oneDAL/oneDAL/cpp/oneapi/dal/table/homogen.hpp" bodystart="111" bodyend="116"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classoneapi_1_1dal_1_1v1_1_1homogen__table_1a3daf8b465cf9de3b698f00a03c785e9e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>homogen_table</definition>
        <argsstring>()</argsstring>
        <name>homogen_table</name>
        <qualifiedname>oneapi::dal::v1::homogen_table::homogen_table</qualifiedname>
        <briefdescription>
<para>Creates a new <computeroutput><ref refid="classoneapi_1_1dal_1_1v1_1_1homogen__table" kindref="compound">homogen_table</ref></computeroutput> instance with zero number of rows and columns. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/oneDAL/oneDAL/cpp/oneapi/dal/table/homogen.hpp" line="119" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classoneapi_1_1dal_1_1v1_1_1homogen__table_1a7f5e81253fd0e6d38612e6825a8baa95" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>homogen_table</definition>
        <argsstring>(const table &amp;other)</argsstring>
        <name>homogen_table</name>
        <qualifiedname>oneapi::dal::v1::homogen_table::homogen_table</qualifiedname>
        <param>
          <type>const <ref refid="classoneapi_1_1dal_1_1v1_1_1table" kindref="compound">table</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Casts an object of the base table type to a homogen table. If cast is not possible, the operation is equivalent to a default constructor call. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/oneDAL/oneDAL/cpp/oneapi/dal/table/homogen.hpp" line="123" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classoneapi_1_1dal_1_1v1_1_1homogen__table_1a837eb7dc1b30b4c59302b2537773b5c6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Data</type>
          </param>
          <param>
            <type>typename ConstDeleter</type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>homogen_table</definition>
        <argsstring>(const Data *data_pointer, std::int64_t row_count, std::int64_t column_count, ConstDeleter &amp;&amp;data_deleter, data_layout layout=data_layout::row_major)</argsstring>
        <name>homogen_table</name>
        <qualifiedname>oneapi::dal::v1::homogen_table::homogen_table</qualifiedname>
        <param>
          <type>const Data *</type>
          <declname>data_pointer</declname>
        </param>
        <param>
          <type>std::int64_t</type>
          <declname>row_count</declname>
        </param>
        <param>
          <type>std::int64_t</type>
          <declname>column_count</declname>
        </param>
        <param>
          <type>ConstDeleter &amp;&amp;</type>
          <declname>data_deleter</declname>
        </param>
        <param>
          <type>data_layout</type>
          <declname>layout</declname>
          <defval>data_layout::row_major</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Creates a new <computeroutput><ref refid="classoneapi_1_1dal_1_1v1_1_1homogen__table" kindref="compound">homogen_table</ref></computeroutput> instance from externally-defined data block. Table object owns the data pointer. The :literal:<computeroutput>data</computeroutput> should point to the <computeroutput>data_pointer</computeroutput> memory block.</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>Data</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of elements in the data block that will be stored into the table. The :literal:<computeroutput>Data</computeroutput> type should be at least :expr:<computeroutput>float</computeroutput>, :expr:<computeroutput>double</computeroutput> or :expr:<computeroutput>std::int32_t</computeroutput>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ConstDeleter</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of a deleter called on <computeroutput>data_pointer</computeroutput> when the last table that refers it is out of the scope.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data_pointer</parametername>
</parameternamelist>
<parameterdescription>
<para>The pointer to a homogeneous data block. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>row_count</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of rows in the table. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>column_count</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of columns in the table. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data_deleter</parametername>
</parameternamelist>
<parameterdescription>
<para>The deleter that is called on the <computeroutput>data_pointer</computeroutput> when the last table that refers it is out of the scope. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>layout</parametername>
</parameternamelist>
<parameterdescription>
<para>The layout of the data. Should be :literal:<computeroutput>data_layout::row_major</computeroutput> or :literal:<computeroutput>data_layout::column_major</computeroutput>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/oneDAL/oneDAL/cpp/oneapi/dal/table/homogen.hpp" line="143" column="5" bodyfile="/home/runner/work/oneDAL/oneDAL/cpp/oneapi/dal/table/homogen.hpp" bodystart="143" bodyend="154"/>
      </memberdef>
      <memberdef kind="function" id="classoneapi_1_1dal_1_1v1_1_1homogen__table_1ab36c7b0b831d91b3609a64952c7e779b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Data</type>
          </param>
          <param>
            <type>typename ConstDeleter</type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>homogen_table</definition>
        <argsstring>(const sycl::queue &amp;queue, const Data *data_pointer, std::int64_t row_count, std::int64_t column_count, ConstDeleter &amp;&amp;data_deleter, const std::vector&lt; sycl::event &gt; &amp;dependencies={}, data_layout layout=data_layout::row_major)</argsstring>
        <name>homogen_table</name>
        <qualifiedname>oneapi::dal::v1::homogen_table::homogen_table</qualifiedname>
        <param>
          <type>const sycl::queue &amp;</type>
          <declname>queue</declname>
        </param>
        <param>
          <type>const Data *</type>
          <declname>data_pointer</declname>
        </param>
        <param>
          <type>std::int64_t</type>
          <declname>row_count</declname>
        </param>
        <param>
          <type>std::int64_t</type>
          <declname>column_count</declname>
        </param>
        <param>
          <type>ConstDeleter &amp;&amp;</type>
          <declname>data_deleter</declname>
        </param>
        <param>
          <type>const std::vector&lt; sycl::event &gt; &amp;</type>
          <declname>dependencies</declname>
          <defval>{}</defval>
        </param>
        <param>
          <type>data_layout</type>
          <declname>layout</declname>
          <defval>data_layout::row_major</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Creates a new <computeroutput><ref refid="classoneapi_1_1dal_1_1v1_1_1homogen__table" kindref="compound">homogen_table</ref></computeroutput> instance from externally-defined data block. Table object owns the data pointer. The :literal:<computeroutput>data</computeroutput> should point to the <computeroutput>data_pointer</computeroutput> memory block.</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>Data</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of elements in the data block that will be stored into the table. The :literal:<computeroutput>Data</computeroutput> type should be at least :expr:<computeroutput>float</computeroutput>, :expr:<computeroutput>double</computeroutput> or :expr:<computeroutput>std::int32_t</computeroutput>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ConstDeleter</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of a deleter called on <computeroutput>data_pointer</computeroutput> when the last table that refers it is out of the scope.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>queue</parametername>
</parameternamelist>
<parameterdescription>
<para>The SYCL* queue object </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data_pointer</parametername>
</parameternamelist>
<parameterdescription>
<para>The pointer to a homogeneous data block. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>row_count</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of rows in the table. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>column_count</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of columns in the table. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data_deleter</parametername>
</parameternamelist>
<parameterdescription>
<para>The deleter that is called on the <computeroutput>data_pointer</computeroutput> when the last table that refers it is out of the scope. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dependencies</parametername>
</parameternamelist>
<parameterdescription>
<para>Events indicating availability of the :literal:<computeroutput>Data</computeroutput> for reading or writing. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>layout</parametername>
</parameternamelist>
<parameterdescription>
<para>The layout of the data. Should be :literal:<computeroutput>data_layout::row_major</computeroutput> or :literal:<computeroutput>data_layout::column_major</computeroutput>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/oneDAL/oneDAL/cpp/oneapi/dal/table/homogen.hpp" line="177" column="5" bodyfile="/home/runner/work/oneDAL/oneDAL/cpp/oneapi/dal/table/homogen.hpp" bodystart="177" bodyend="191"/>
      </memberdef>
      <memberdef kind="function" id="classoneapi_1_1dal_1_1v1_1_1homogen__table_1a5ac0c3b03a1da2da935ffa23fe81b6c2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Data</type>
          </param>
        </templateparamlist>
        <type>const Data *</type>
        <definition>const Data * get_data</definition>
        <argsstring>() const</argsstring>
        <name>get_data</name>
        <qualifiedname>oneapi::dal::v1::homogen_table::get_data</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the :literal:<computeroutput>data</computeroutput> pointer cast to the :literal:<computeroutput>Data</computeroutput> type. No checks are performed that this type is the actual type of the data within the table. If table has no data, returns :literal:<computeroutput>nullptr</computeroutput>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/oneDAL/oneDAL/cpp/oneapi/dal/table/homogen.hpp" line="198" column="16" bodyfile="/home/runner/work/oneDAL/oneDAL/cpp/oneapi/dal/table/homogen.hpp" bodystart="198" bodyend="200"/>
      </memberdef>
      <memberdef kind="function" id="classoneapi_1_1dal_1_1v1_1_1homogen__table_1a95776562b3a7d78d905f03ba57397ae4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const void *</type>
        <definition>const void * get_data</definition>
        <argsstring>() const</argsstring>
        <name>get_data</name>
        <qualifiedname>oneapi::dal::v1::homogen_table::get_data</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The pointer to the data block within the table. Should be equal to <computeroutput>nullptr</computeroutput> when :expr:<computeroutput>row_count == 0</computeroutput> and :expr:<computeroutput>column_count == 0</computeroutput>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/oneDAL/oneDAL/cpp/oneapi/dal/table/homogen.hpp" line="204" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classoneapi_1_1dal_1_1v1_1_1homogen__table_1a07b5fdf1f97bc88ab939443e4dc7f3a5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::int64_t</type>
        <definition>std::int64_t get_kind</definition>
        <argsstring>() const</argsstring>
        <name>get_kind</name>
        <qualifiedname>oneapi::dal::v1::homogen_table::get_kind</qualifiedname>
        <briefdescription>
<para>The unique id of the homogen table type. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/oneDAL/oneDAL/cpp/oneapi/dal/table/homogen.hpp" line="207" column="18" bodyfile="/home/runner/work/oneDAL/oneDAL/cpp/oneapi/dal/table/homogen.hpp" bodystart="207" bodyend="209"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="classoneapi_1_1dal_1_1v1_1_1homogen__table_1a9642300291eab4e1955892a27f3485a5" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Data</type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>homogen_table</definition>
        <argsstring>(const dal::array&lt; Data &gt; &amp;data, std::int64_t row_count, std::int64_t column_count, data_layout layout=data_layout::row_major)</argsstring>
        <name>homogen_table</name>
        <qualifiedname>oneapi::dal::v1::homogen_table::homogen_table</qualifiedname>
        <param>
          <type>const <ref refid="classoneapi_1_1dal_1_1v2_1_1array" kindref="compound">dal::array</ref>&lt; Data &gt; &amp;</type>
          <declname>data</declname>
        </param>
        <param>
          <type>std::int64_t</type>
          <declname>row_count</declname>
        </param>
        <param>
          <type>std::int64_t</type>
          <declname>column_count</declname>
        </param>
        <param>
          <type>data_layout</type>
          <declname>layout</declname>
          <defval>data_layout::row_major</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/oneDAL/oneDAL/cpp/oneapi/dal/table/homogen.hpp" line="213" column="5" bodyfile="/home/runner/work/oneDAL/oneDAL/cpp/oneapi/dal/table/homogen.hpp" bodystart="213" bodyend="218"/>
      </memberdef>
      <memberdef kind="function" id="classoneapi_1_1dal_1_1v1_1_1homogen__table_1a22ef35ae3a8a8b5f5d416764126a19d0" prot="private" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>homogen_table</definition>
        <argsstring>(detail::homogen_table_iface *impl)</argsstring>
        <name>homogen_table</name>
        <qualifiedname>oneapi::dal::v1::homogen_table::homogen_table</qualifiedname>
        <param>
          <type>detail::homogen_table_iface *</type>
          <declname>impl</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/oneDAL/oneDAL/cpp/oneapi/dal/table/homogen.hpp" line="220" column="14" bodyfile="/home/runner/work/oneDAL/oneDAL/cpp/oneapi/dal/table/homogen.hpp" bodystart="220" bodyend="220"/>
      </memberdef>
      <memberdef kind="function" id="classoneapi_1_1dal_1_1v1_1_1homogen__table_1af309c47f8e2f31cc7efec94b9a885373" prot="private" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>homogen_table</definition>
        <argsstring>(const detail::shared&lt; detail::homogen_table_iface &gt; &amp;impl)</argsstring>
        <name>homogen_table</name>
        <qualifiedname>oneapi::dal::v1::homogen_table::homogen_table</qualifiedname>
        <param>
          <type>const detail::shared&lt; detail::homogen_table_iface &gt; &amp;</type>
          <declname>impl</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/oneDAL/oneDAL/cpp/oneapi/dal/table/homogen.hpp" line="221" column="14" bodyfile="/home/runner/work/oneDAL/oneDAL/cpp/oneapi/dal/table/homogen.hpp" bodystart="221" bodyend="221"/>
      </memberdef>
      <memberdef kind="function" id="classoneapi_1_1dal_1_1v1_1_1homogen__table_1a42c7b7bda984fbf20ec248848579a6b7" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Policy</type>
          </param>
          <param>
            <type>typename Data</type>
          </param>
          <param>
            <type>typename ConstDeleter</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void init_impl</definition>
        <argsstring>(const Policy &amp;policy, std::int64_t row_count, std::int64_t column_count, const Data *data_pointer, ConstDeleter &amp;&amp;data_deleter, data_layout layout)</argsstring>
        <name>init_impl</name>
        <qualifiedname>oneapi::dal::v1::homogen_table::init_impl</qualifiedname>
        <param>
          <type>const Policy &amp;</type>
          <declname>policy</declname>
        </param>
        <param>
          <type>std::int64_t</type>
          <declname>row_count</declname>
        </param>
        <param>
          <type>std::int64_t</type>
          <declname>column_count</declname>
        </param>
        <param>
          <type>const Data *</type>
          <declname>data_pointer</declname>
        </param>
        <param>
          <type>ConstDeleter &amp;&amp;</type>
          <declname>data_deleter</declname>
        </param>
        <param>
          <type>data_layout</type>
          <declname>layout</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/oneDAL/oneDAL/cpp/oneapi/dal/table/homogen.hpp" line="224" column="10" bodyfile="/home/runner/work/oneDAL/oneDAL/cpp/oneapi/dal/table/homogen.hpp" bodystart="224" bodyend="244"/>
      </memberdef>
      <memberdef kind="function" id="classoneapi_1_1dal_1_1v1_1_1homogen__table_1a233c9c9b84c6c462b45c88bef0c60bd4" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Data</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void init_impl</definition>
        <argsstring>(const dal::array&lt; Data &gt; &amp;data, std::int64_t row_count, std::int64_t column_count, data_layout layout)</argsstring>
        <name>init_impl</name>
        <qualifiedname>oneapi::dal::v1::homogen_table::init_impl</qualifiedname>
        <param>
          <type>const <ref refid="classoneapi_1_1dal_1_1v2_1_1array" kindref="compound">dal::array</ref>&lt; Data &gt; &amp;</type>
          <declname>data</declname>
        </param>
        <param>
          <type>std::int64_t</type>
          <declname>row_count</declname>
        </param>
        <param>
          <type>std::int64_t</type>
          <declname>column_count</declname>
        </param>
        <param>
          <type>data_layout</type>
          <declname>layout</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/oneDAL/oneDAL/cpp/oneapi/dal/table/homogen.hpp" line="247" column="10" bodyfile="/home/runner/work/oneDAL/oneDAL/cpp/oneapi/dal/table/homogen.hpp" bodystart="247" bodyend="266"/>
      </memberdef>
      <memberdef kind="function" id="classoneapi_1_1dal_1_1v1_1_1homogen__table_1a9dbd8b3a6357b50e2c0f3431b7d5c62e" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Policy</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void init_impl</definition>
        <argsstring>(const Policy &amp;policy, std::int64_t row_count, std::int64_t column_count, const dal::array&lt; byte_t &gt; &amp;data, const data_type &amp;dtype, data_layout layout)</argsstring>
        <name>init_impl</name>
        <qualifiedname>oneapi::dal::v1::homogen_table::init_impl</qualifiedname>
        <param>
          <type>const Policy &amp;</type>
          <declname>policy</declname>
        </param>
        <param>
          <type>std::int64_t</type>
          <declname>row_count</declname>
        </param>
        <param>
          <type>std::int64_t</type>
          <declname>column_count</declname>
        </param>
        <param>
          <type>const <ref refid="classoneapi_1_1dal_1_1v2_1_1array" kindref="compound">dal::array</ref>&lt; byte_t &gt; &amp;</type>
          <declname>data</declname>
        </param>
        <param>
          <type>const data_type &amp;</type>
          <declname>dtype</declname>
        </param>
        <param>
          <type>data_layout</type>
          <declname>layout</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/oneDAL/oneDAL/cpp/oneapi/dal/table/homogen.hpp" line="269" column="10"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>homogen_table</label>
        <link refid="classoneapi_1_1dal_1_1v1_1_1homogen__table"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>table</label>
        <link refid="classoneapi_1_1dal_1_1v1_1_1table"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>homogen_table</label>
        <link refid="classoneapi_1_1dal_1_1v1_1_1homogen__table"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>table</label>
        <link refid="classoneapi_1_1dal_1_1v1_1_1table"/>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/oneDAL/oneDAL/cpp/oneapi/dal/table/homogen.hpp" line="25" column="1" bodyfile="/home/runner/work/oneDAL/oneDAL/cpp/oneapi/dal/table/homogen.hpp" bodystart="25" bodyend="275"/>
    <listofallmembers>
      <member refid="classoneapi_1_1dal_1_1v1_1_1table_1ad34b0800ecaa0895cd108af5dcd7bc5f" prot="public" virt="non-virtual"><scope>oneapi::dal::v1::homogen_table</scope><name>get_column_count</name></member>
      <member refid="classoneapi_1_1dal_1_1v1_1_1homogen__table_1a5ac0c3b03a1da2da935ffa23fe81b6c2" prot="public" virt="non-virtual"><scope>oneapi::dal::v1::homogen_table</scope><name>get_data</name></member>
      <member refid="classoneapi_1_1dal_1_1v1_1_1homogen__table_1a95776562b3a7d78d905f03ba57397ae4" prot="public" virt="non-virtual"><scope>oneapi::dal::v1::homogen_table</scope><name>get_data</name></member>
      <member refid="classoneapi_1_1dal_1_1v1_1_1table_1a3f81d641450d208d120975d47eb0ffdc" prot="public" virt="non-virtual"><scope>oneapi::dal::v1::homogen_table</scope><name>get_data_layout</name></member>
      <member refid="classoneapi_1_1dal_1_1v1_1_1homogen__table_1a07b5fdf1f97bc88ab939443e4dc7f3a5" prot="public" virt="non-virtual"><scope>oneapi::dal::v1::homogen_table</scope><name>get_kind</name></member>
      <member refid="classoneapi_1_1dal_1_1v1_1_1table_1a51e121177d2156caa5216466fd442196" prot="public" virt="non-virtual"><scope>oneapi::dal::v1::homogen_table</scope><name>get_metadata</name></member>
      <member refid="classoneapi_1_1dal_1_1v1_1_1table_1ac3b1b36ddf172f1cf880c4eba11458de" prot="public" virt="non-virtual"><scope>oneapi::dal::v1::homogen_table</scope><name>get_row_count</name></member>
      <member refid="classoneapi_1_1dal_1_1v1_1_1table_1af1c5bdc5bbce021f9e961d76b4a96332" prot="public" virt="non-virtual"><scope>oneapi::dal::v1::homogen_table</scope><name>has_data</name></member>
      <member refid="classoneapi_1_1dal_1_1v1_1_1homogen__table_1a3daf8b465cf9de3b698f00a03c785e9e" prot="public" virt="non-virtual"><scope>oneapi::dal::v1::homogen_table</scope><name>homogen_table</name></member>
      <member refid="classoneapi_1_1dal_1_1v1_1_1homogen__table_1a7f5e81253fd0e6d38612e6825a8baa95" prot="public" virt="non-virtual"><scope>oneapi::dal::v1::homogen_table</scope><name>homogen_table</name></member>
      <member refid="classoneapi_1_1dal_1_1v1_1_1homogen__table_1a837eb7dc1b30b4c59302b2537773b5c6" prot="public" virt="non-virtual"><scope>oneapi::dal::v1::homogen_table</scope><name>homogen_table</name></member>
      <member refid="classoneapi_1_1dal_1_1v1_1_1homogen__table_1ab36c7b0b831d91b3609a64952c7e779b" prot="public" virt="non-virtual"><scope>oneapi::dal::v1::homogen_table</scope><name>homogen_table</name></member>
      <member refid="classoneapi_1_1dal_1_1v1_1_1homogen__table_1a9642300291eab4e1955892a27f3485a5" prot="private" virt="non-virtual"><scope>oneapi::dal::v1::homogen_table</scope><name>homogen_table</name></member>
      <member refid="classoneapi_1_1dal_1_1v1_1_1homogen__table_1a22ef35ae3a8a8b5f5d416764126a19d0" prot="private" virt="non-virtual"><scope>oneapi::dal::v1::homogen_table</scope><name>homogen_table</name></member>
      <member refid="classoneapi_1_1dal_1_1v1_1_1homogen__table_1af309c47f8e2f31cc7efec94b9a885373" prot="private" virt="non-virtual"><scope>oneapi::dal::v1::homogen_table</scope><name>homogen_table</name></member>
      <member refid="classoneapi_1_1dal_1_1v1_1_1homogen__table_1a42c7b7bda984fbf20ec248848579a6b7" prot="private" virt="non-virtual"><scope>oneapi::dal::v1::homogen_table</scope><name>init_impl</name></member>
      <member refid="classoneapi_1_1dal_1_1v1_1_1homogen__table_1a233c9c9b84c6c462b45c88bef0c60bd4" prot="private" virt="non-virtual"><scope>oneapi::dal::v1::homogen_table</scope><name>init_impl</name></member>
      <member refid="classoneapi_1_1dal_1_1v1_1_1homogen__table_1a9dbd8b3a6357b50e2c0f3431b7d5c62e" prot="private" virt="non-virtual"><scope>oneapi::dal::v1::homogen_table</scope><name>init_impl</name></member>
      <member refid="classoneapi_1_1dal_1_1v1_1_1table_1a0c4934cc84529b14ebbc11efc10fb2fd" prot="protected" virt="non-virtual" ambiguityscope="oneapi::dal::v1::table::"><scope>oneapi::dal::v1::homogen_table</scope><name>init_impl</name></member>
      <member refid="classoneapi_1_1dal_1_1v1_1_1homogen__table_1a9ab6fb97fb3e9768781054d12edbaec5" prot="public" virt="non-virtual"><scope>oneapi::dal::v1::homogen_table</scope><name>kind</name></member>
      <member refid="classoneapi_1_1dal_1_1v1_1_1table_1a45cea1040b952b56c972f0d1b2b125fd" prot="public" virt="non-virtual"><scope>oneapi::dal::v1::homogen_table</scope><name>operator=</name></member>
      <member refid="classoneapi_1_1dal_1_1v1_1_1table_1a724d5ae9dc3f955ca697e8045556f3b7" prot="public" virt="non-virtual"><scope>oneapi::dal::v1::homogen_table</scope><name>operator=</name></member>
      <member refid="classoneapi_1_1dal_1_1v1_1_1table_1a5aa7b43c8ec77df216a71a27da0a321c" prot="public" virt="non-virtual"><scope>oneapi::dal::v1::homogen_table</scope><name>table</name></member>
      <member refid="classoneapi_1_1dal_1_1v1_1_1table_1a33da22635a166f71ccbb7cbd3f26bd39" prot="public" virt="non-virtual"><scope>oneapi::dal::v1::homogen_table</scope><name>table</name></member>
      <member refid="classoneapi_1_1dal_1_1v1_1_1table_1abc21957128397706260f34647b99ba53" prot="public" virt="non-virtual"><scope>oneapi::dal::v1::homogen_table</scope><name>table</name></member>
      <member refid="classoneapi_1_1dal_1_1v1_1_1table_1afe55572aaad70e36005dbb284b9db465" prot="protected" virt="non-virtual"><scope>oneapi::dal::v1::homogen_table</scope><name>table</name></member>
      <member refid="classoneapi_1_1dal_1_1v1_1_1table_1a88833a42fc59ad6921de2516b9640792" prot="protected" virt="non-virtual"><scope>oneapi::dal::v1::homogen_table</scope><name>table</name></member>
      <member refid="classoneapi_1_1dal_1_1v1_1_1table_1a321e3a43567c87aae92784fca60ad712" prot="protected" virt="non-virtual"><scope>oneapi::dal::v1::homogen_table</scope><name>validate_input_dimensions</name></member>
      <member refid="classoneapi_1_1dal_1_1v1_1_1homogen__table_1a3fcad1ea70dfade4b05e658b0baf53bc" prot="public" virt="non-virtual"><scope>oneapi::dal::v1::homogen_table</scope><name>wrap</name></member>
      <member refid="classoneapi_1_1dal_1_1v1_1_1homogen__table_1ac97969f14426eadcf125f107cce9f831" prot="public" virt="non-virtual"><scope>oneapi::dal::v1::homogen_table</scope><name>wrap</name></member>
      <member refid="classoneapi_1_1dal_1_1v1_1_1homogen__table_1aab6083367fcd534e9ece2a5453b60e4b" prot="public" virt="non-virtual"><scope>oneapi::dal::v1::homogen_table</scope><name>wrap</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
