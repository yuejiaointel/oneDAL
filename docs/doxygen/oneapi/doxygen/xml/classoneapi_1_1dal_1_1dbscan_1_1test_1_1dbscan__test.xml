<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classoneapi_1_1dal_1_1dbscan_1_1test_1_1dbscan__test" kind="class" language="C++" prot="public">
    <compoundname>oneapi::dal::dbscan::test::dbscan_test</compoundname>
    <basecompoundref refid="classoneapi_1_1dal_1_1test_1_1engine_1_1crtp__algo__fixture" prot="public" virt="non-virtual">oneapi::dal::test::engine::crtp_algo_fixture&lt; TestType, Derived &gt;</basecompoundref>
    <templateparamlist>
      <param>
        <type>typename TestType</type>
      </param>
      <param>
        <type>typename Derived</type>
      </param>
    </templateparamlist>
    <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classoneapi_1_1dal_1_1dbscan_1_1test_1_1dbscan__test_1ad8e497c0a637020e38f23327009fa9b2" prot="public" static="no">
        <type><ref refid="classoneapi_1_1dal_1_1test_1_1engine_1_1crtp__algo__fixture" kindref="compound">te::crtp_algo_fixture</ref>&lt; TestType, Derived &gt;</type>
        <definition>using base_t =  te::crtp_algo_fixture&lt;TestType, Derived&gt;</definition>
        <argsstring></argsstring>
        <name>base_t</name>
        <qualifiedname>oneapi::dal::dbscan::test::dbscan_test::base_t</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/oneDAL/oneDAL/cpp/oneapi/dal/algo/dbscan/test/fixture.hpp" line="40" column="5" bodyfile="/home/runner/work/oneDAL/oneDAL/cpp/oneapi/dal/algo/dbscan/test/fixture.hpp" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classoneapi_1_1dal_1_1dbscan_1_1test_1_1dbscan__test_1ac326cc316db45ea7e8a439c7b06c4cb1" prot="public" static="no">
        <type>std::tuple_element_t&lt; 0, TestType &gt;</type>
        <definition>using float_t =  std::tuple_element_t&lt;0, TestType&gt;</definition>
        <argsstring></argsstring>
        <name>float_t</name>
        <qualifiedname>oneapi::dal::dbscan::test::dbscan_test::float_t</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/oneDAL/oneDAL/cpp/oneapi/dal/algo/dbscan/test/fixture.hpp" line="41" column="5" bodyfile="/home/runner/work/oneDAL/oneDAL/cpp/oneapi/dal/algo/dbscan/test/fixture.hpp" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classoneapi_1_1dal_1_1dbscan_1_1test_1_1dbscan__test_1a8f837853131c68aace349d86d5190e55" prot="public" static="no">
        <type>std::tuple_element_t&lt; 1, TestType &gt;</type>
        <definition>using method_t =  std::tuple_element_t&lt;1, TestType&gt;</definition>
        <argsstring></argsstring>
        <name>method_t</name>
        <qualifiedname>oneapi::dal::dbscan::test::dbscan_test::method_t</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/oneDAL/oneDAL/cpp/oneapi/dal/algo/dbscan/test/fixture.hpp" line="42" column="5" bodyfile="/home/runner/work/oneDAL/oneDAL/cpp/oneapi/dal/algo/dbscan/test/fixture.hpp" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classoneapi_1_1dal_1_1dbscan_1_1test_1_1dbscan__test_1aa2ef2eee28c48db0ae4cbc96c1d95790" prot="public" static="no">
        <type><ref refid="classoneapi_1_1dal_1_1dbscan_1_1v1_1_1compute__result" kindref="compound">compute_result</ref>&lt; <ref refid="structoneapi_1_1dal_1_1dbscan_1_1task_1_1v1_1_1clustering" kindref="compound">task::clustering</ref> &gt;</type>
        <definition>using result_t =  compute_result&lt;task::clustering&gt;</definition>
        <argsstring></argsstring>
        <name>result_t</name>
        <qualifiedname>oneapi::dal::dbscan::test::dbscan_test::result_t</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/oneDAL/oneDAL/cpp/oneapi/dal/algo/dbscan/test/fixture.hpp" line="43" column="5" bodyfile="/home/runner/work/oneDAL/oneDAL/cpp/oneapi/dal/algo/dbscan/test/fixture.hpp" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classoneapi_1_1dal_1_1dbscan_1_1test_1_1dbscan__test_1ab650da17e790a333e1028a6eeaecee6e" prot="public" static="no">
        <type><ref refid="classoneapi_1_1dal_1_1dbscan_1_1v1_1_1compute__input" kindref="compound">compute_input</ref>&lt; <ref refid="structoneapi_1_1dal_1_1dbscan_1_1task_1_1v1_1_1clustering" kindref="compound">task::clustering</ref> &gt;</type>
        <definition>using input_t =  compute_input&lt;task::clustering&gt;</definition>
        <argsstring></argsstring>
        <name>input_t</name>
        <qualifiedname>oneapi::dal::dbscan::test::dbscan_test::input_t</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/oneDAL/oneDAL/cpp/oneapi/dal/algo/dbscan/test/fixture.hpp" line="44" column="5" bodyfile="/home/runner/work/oneDAL/oneDAL/cpp/oneapi/dal/algo/dbscan/test/fixture.hpp" bodystart="44" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classoneapi_1_1dal_1_1dbscan_1_1test_1_1dbscan__test_1a89f1ca26cd41848ef59951457d04e4dc" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto get_descriptor</definition>
        <argsstring>(float_t epsilon, std::int64_t min_observations) const</argsstring>
        <name>get_descriptor</name>
        <qualifiedname>oneapi::dal::dbscan::test::dbscan_test::get_descriptor</qualifiedname>
        <param>
          <type>float_t</type>
          <declname>epsilon</declname>
        </param>
        <param>
          <type>std::int64_t</type>
          <declname>min_observations</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/oneDAL/oneDAL/cpp/oneapi/dal/algo/dbscan/test/fixture.hpp" line="46" column="10" bodyfile="/home/runner/work/oneDAL/oneDAL/cpp/oneapi/dal/algo/dbscan/test/fixture.hpp" bodystart="46" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="classoneapi_1_1dal_1_1dbscan_1_1test_1_1dbscan__test_1a7f5414997b6618a09bc2fbb95e31b492" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void check_if_close</definition>
        <argsstring>(const table &amp;left, const table &amp;right, std::string name=&quot;&quot;, double tol=1e-2)</argsstring>
        <name>check_if_close</name>
        <qualifiedname>oneapi::dal::dbscan::test::dbscan_test::check_if_close</qualifiedname>
        <param>
          <type>const <ref refid="classoneapi_1_1dal_1_1v1_1_1table" kindref="compound">table</ref> &amp;</type>
          <declname>left</declname>
        </param>
        <param>
          <type>const <ref refid="classoneapi_1_1dal_1_1v1_1_1table" kindref="compound">table</ref> &amp;</type>
          <declname>right</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>name</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>double</type>
          <declname>tol</declname>
          <defval>1e-2</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/oneDAL/oneDAL/cpp/oneapi/dal/algo/dbscan/test/fixture.hpp" line="51" column="10" bodyfile="/home/runner/work/oneDAL/oneDAL/cpp/oneapi/dal/algo/dbscan/test/fixture.hpp" bodystart="51" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="classoneapi_1_1dal_1_1dbscan_1_1test_1_1dbscan__test_1a9b68b945cc51f64666f613cf916a535d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void run_checks</definition>
        <argsstring>(const table &amp;data, const table &amp;weights, float_t epsilon, std::int64_t min_observations, const table &amp;ref_responses)</argsstring>
        <name>run_checks</name>
        <qualifiedname>oneapi::dal::dbscan::test::dbscan_test::run_checks</qualifiedname>
        <param>
          <type>const <ref refid="classoneapi_1_1dal_1_1v1_1_1table" kindref="compound">table</ref> &amp;</type>
          <declname>data</declname>
        </param>
        <param>
          <type>const <ref refid="classoneapi_1_1dal_1_1v1_1_1table" kindref="compound">table</ref> &amp;</type>
          <declname>weights</declname>
        </param>
        <param>
          <type>float_t</type>
          <declname>epsilon</declname>
        </param>
        <param>
          <type>std::int64_t</type>
          <declname>min_observations</declname>
        </param>
        <param>
          <type>const <ref refid="classoneapi_1_1dal_1_1v1_1_1table" kindref="compound">table</ref> &amp;</type>
          <declname>ref_responses</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/oneDAL/oneDAL/cpp/oneapi/dal/algo/dbscan/test/fixture.hpp" line="90" column="10" bodyfile="/home/runner/work/oneDAL/oneDAL/cpp/oneapi/dal/algo/dbscan/test/fixture.hpp" bodystart="90" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="classoneapi_1_1dal_1_1dbscan_1_1test_1_1dbscan__test_1a753829edfd62365f87a9287717d1bd18" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void check_responses_against_ref</definition>
        <argsstring>(const table &amp;responses, const table &amp;ref_responses)</argsstring>
        <name>check_responses_against_ref</name>
        <qualifiedname>oneapi::dal::dbscan::test::dbscan_test::check_responses_against_ref</qualifiedname>
        <param>
          <type>const <ref refid="classoneapi_1_1dal_1_1v1_1_1table" kindref="compound">table</ref> &amp;</type>
          <declname>responses</declname>
        </param>
        <param>
          <type>const <ref refid="classoneapi_1_1dal_1_1v1_1_1table" kindref="compound">table</ref> &amp;</type>
          <declname>ref_responses</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/oneDAL/oneDAL/cpp/oneapi/dal/algo/dbscan/test/fixture.hpp" line="106" column="10" bodyfile="/home/runner/work/oneDAL/oneDAL/cpp/oneapi/dal/algo/dbscan/test/fixture.hpp" bodystart="106" bodyend="116"/>
      </memberdef>
      <memberdef kind="function" id="classoneapi_1_1dal_1_1dbscan_1_1test_1_1dbscan__test_1a55cd717bd749915adc0e57aaf28169d2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void dbi_determenistic_checks</definition>
        <argsstring>(const table &amp;data, double epsilon, std::int64_t min_observations, float_t ref_dbi, float_t dbi_ref_tol=1.0e-4)</argsstring>
        <name>dbi_determenistic_checks</name>
        <qualifiedname>oneapi::dal::dbscan::test::dbscan_test::dbi_determenistic_checks</qualifiedname>
        <param>
          <type>const <ref refid="classoneapi_1_1dal_1_1v1_1_1table" kindref="compound">table</ref> &amp;</type>
          <declname>data</declname>
        </param>
        <param>
          <type>double</type>
          <declname>epsilon</declname>
        </param>
        <param>
          <type>std::int64_t</type>
          <declname>min_observations</declname>
        </param>
        <param>
          <type>float_t</type>
          <declname>ref_dbi</declname>
        </param>
        <param>
          <type>float_t</type>
          <declname>dbi_ref_tol</declname>
          <defval>1.0e-4</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/oneDAL/oneDAL/cpp/oneapi/dal/algo/dbscan/test/fixture.hpp" line="117" column="10" bodyfile="/home/runner/work/oneDAL/oneDAL/cpp/oneapi/dal/algo/dbscan/test/fixture.hpp" bodystart="117" bodyend="137"/>
      </memberdef>
      <memberdef kind="function" id="classoneapi_1_1dal_1_1dbscan_1_1test_1_1dbscan__test_1ac0a96194fc9ea22c1f9ef281cf2c9e61" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool check_value_with_ref_tol</definition>
        <argsstring>(float_t val, float_t ref_val, float_t ref_tol)</argsstring>
        <name>check_value_with_ref_tol</name>
        <qualifiedname>oneapi::dal::dbscan::test::dbscan_test::check_value_with_ref_tol</qualifiedname>
        <param>
          <type>float_t</type>
          <declname>val</declname>
        </param>
        <param>
          <type>float_t</type>
          <declname>ref_val</declname>
        </param>
        <param>
          <type>float_t</type>
          <declname>ref_tol</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/oneDAL/oneDAL/cpp/oneapi/dal/algo/dbscan/test/fixture.hpp" line="139" column="10" bodyfile="/home/runner/work/oneDAL/oneDAL/cpp/oneapi/dal/algo/dbscan/test/fixture.hpp" bodystart="139" bodyend="145"/>
      </memberdef>
      <memberdef kind="function" id="classoneapi_1_1dal_1_1dbscan_1_1test_1_1dbscan__test_1a18f70a1480fa7451217594df74fdf690" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void mode_checks</definition>
        <argsstring>(result_option_id compute_mode, const table &amp;data, const table &amp;weights, float_t epsilon, std::int64_t min_observations)</argsstring>
        <name>mode_checks</name>
        <qualifiedname>oneapi::dal::dbscan::test::dbscan_test::mode_checks</qualifiedname>
        <param>
          <type><ref refid="classoneapi_1_1dal_1_1dbscan_1_1result__option__id" kindref="compound">result_option_id</ref></type>
          <declname>compute_mode</declname>
        </param>
        <param>
          <type>const <ref refid="classoneapi_1_1dal_1_1v1_1_1table" kindref="compound">table</ref> &amp;</type>
          <declname>data</declname>
        </param>
        <param>
          <type>const <ref refid="classoneapi_1_1dal_1_1v1_1_1table" kindref="compound">table</ref> &amp;</type>
          <declname>weights</declname>
        </param>
        <param>
          <type>float_t</type>
          <declname>epsilon</declname>
        </param>
        <param>
          <type>std::int64_t</type>
          <declname>min_observations</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/oneDAL/oneDAL/cpp/oneapi/dal/algo/dbscan/test/fixture.hpp" line="147" column="10" bodyfile="/home/runner/work/oneDAL/oneDAL/cpp/oneapi/dal/algo/dbscan/test/fixture.hpp" bodystart="147" bodyend="164"/>
      </memberdef>
      <memberdef kind="function" id="classoneapi_1_1dal_1_1dbscan_1_1test_1_1dbscan__test_1a61af8f0213d7720de8f406fbf5dfa524" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void check_for_exception_for_non_requested_results</definition>
        <argsstring>(result_option_id compute_mode, const result_t &amp;result)</argsstring>
        <name>check_for_exception_for_non_requested_results</name>
        <qualifiedname>oneapi::dal::dbscan::test::dbscan_test::check_for_exception_for_non_requested_results</qualifiedname>
        <param>
          <type><ref refid="classoneapi_1_1dal_1_1dbscan_1_1result__option__id" kindref="compound">result_option_id</ref></type>
          <declname>compute_mode</declname>
        </param>
        <param>
          <type>const <ref refid="classoneapi_1_1dal_1_1dbscan_1_1v1_1_1compute__result" kindref="compound">result_t</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/oneDAL/oneDAL/cpp/oneapi/dal/algo/dbscan/test/fixture.hpp" line="166" column="10" bodyfile="/home/runner/work/oneDAL/oneDAL/cpp/oneapi/dal/algo/dbscan/test/fixture.hpp" bodystart="166" bodyend="180"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>dbscan_test&lt; TestType, Derived &gt;</label>
        <link refid="classoneapi_1_1dal_1_1dbscan_1_1test_1_1dbscan__test"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>float_algo_fixture&lt; std::tuple_element_t&lt; 0, TestType &gt; &gt;</label>
        <link refid="classoneapi_1_1dal_1_1test_1_1engine_1_1float__algo__fixture"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>algo_fixture</label>
        <link refid="classoneapi_1_1dal_1_1test_1_1engine_1_1algo__fixture"/>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>crtp_algo_fixture&lt; TestType, Derived &gt;</label>
        <link refid="classoneapi_1_1dal_1_1test_1_1engine_1_1crtp__algo__fixture"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>crtp_base_algo_fixture&lt; TestType, Derived &gt;</label>
        <link refid="classoneapi_1_1dal_1_1test_1_1engine_1_1crtp__base__algo__fixture"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>policy_fixture</label>
        <link refid="classoneapi_1_1dal_1_1test_1_1engine_1_1policy__fixture"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>dbscan_test&lt; TestType, Derived &gt;</label>
        <link refid="classoneapi_1_1dal_1_1dbscan_1_1test_1_1dbscan__test"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>float_algo_fixture&lt; std::tuple_element_t&lt; 0, TestType &gt; &gt;</label>
        <link refid="classoneapi_1_1dal_1_1test_1_1engine_1_1float__algo__fixture"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>algo_fixture</label>
        <link refid="classoneapi_1_1dal_1_1test_1_1engine_1_1algo__fixture"/>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>crtp_algo_fixture&lt; TestType, Derived &gt;</label>
        <link refid="classoneapi_1_1dal_1_1test_1_1engine_1_1crtp__algo__fixture"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>crtp_base_algo_fixture&lt; TestType, Derived &gt;</label>
        <link refid="classoneapi_1_1dal_1_1test_1_1engine_1_1crtp__base__algo__fixture"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>policy_fixture</label>
        <link refid="classoneapi_1_1dal_1_1test_1_1engine_1_1policy__fixture"/>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/oneDAL/oneDAL/cpp/oneapi/dal/algo/dbscan/test/fixture.hpp" line="38" column="1" bodyfile="/home/runner/work/oneDAL/oneDAL/cpp/oneapi/dal/algo/dbscan/test/fixture.hpp" bodystart="38" bodyend="181"/>
    <listofallmembers>
      <member refid="classoneapi_1_1dal_1_1dbscan_1_1test_1_1dbscan__test_1ad8e497c0a637020e38f23327009fa9b2" prot="public" virt="non-virtual"><scope>oneapi::dal::dbscan::test::dbscan_test</scope><name>base_t</name></member>
      <member refid="classoneapi_1_1dal_1_1dbscan_1_1test_1_1dbscan__test_1a61af8f0213d7720de8f406fbf5dfa524" prot="public" virt="non-virtual"><scope>oneapi::dal::dbscan::test::dbscan_test</scope><name>check_for_exception_for_non_requested_results</name></member>
      <member refid="classoneapi_1_1dal_1_1dbscan_1_1test_1_1dbscan__test_1a7f5414997b6618a09bc2fbb95e31b492" prot="public" virt="non-virtual"><scope>oneapi::dal::dbscan::test::dbscan_test</scope><name>check_if_close</name></member>
      <member refid="classoneapi_1_1dal_1_1dbscan_1_1test_1_1dbscan__test_1a753829edfd62365f87a9287717d1bd18" prot="public" virt="non-virtual"><scope>oneapi::dal::dbscan::test::dbscan_test</scope><name>check_responses_against_ref</name></member>
      <member refid="classoneapi_1_1dal_1_1dbscan_1_1test_1_1dbscan__test_1ac0a96194fc9ea22c1f9ef281cf2c9e61" prot="public" virt="non-virtual"><scope>oneapi::dal::dbscan::test::dbscan_test</scope><name>check_value_with_ref_tol</name></member>
      <member refid="classoneapi_1_1dal_1_1test_1_1engine_1_1crtp__base__algo__fixture_1a94f22290cc3d23e51bf7d30d569628ce" prot="public" virt="non-virtual"><scope>oneapi::dal::dbscan::test::dbscan_test</scope><name>compute</name></member>
      <member refid="classoneapi_1_1dal_1_1test_1_1engine_1_1crtp__base__algo__fixture_1a7512faf980955c840eda7d26ff607134" prot="public" virt="non-virtual"><scope>oneapi::dal::dbscan::test::dbscan_test</scope><name>compute_override</name></member>
      <member refid="classoneapi_1_1dal_1_1test_1_1engine_1_1crtp__algo__fixture_1afe2fd9a0e7f017a0593fc2e062f96280" prot="public" virt="non-virtual"><scope>oneapi::dal::dbscan::test::dbscan_test</scope><name>compute_via_spmd_threads</name></member>
      <member refid="classoneapi_1_1dal_1_1test_1_1engine_1_1crtp__algo__fixture_1a846e74572aabf08ac8ec1b55aa9865e7" prot="public" virt="non-virtual"><scope>oneapi::dal::dbscan::test::dbscan_test</scope><name>compute_via_spmd_threads_and_merge</name></member>
      <member refid="classoneapi_1_1dal_1_1dbscan_1_1test_1_1dbscan__test_1a55cd717bd749915adc0e57aaf28169d2" prot="public" virt="non-virtual"><scope>oneapi::dal::dbscan::test::dbscan_test</scope><name>dbi_determenistic_checks</name></member>
      <member refid="classoneapi_1_1dal_1_1test_1_1engine_1_1crtp__base__algo__fixture_1ad89ea821951f979c65f34120555f1ebf" prot="public" virt="non-virtual"><scope>oneapi::dal::dbscan::test::dbscan_test</scope><name>derived</name></member>
      <member refid="classoneapi_1_1dal_1_1test_1_1engine_1_1crtp__base__algo__fixture_1a7a703a9d746f80d1f1bb684274e9054b" prot="public" virt="non-virtual"><scope>oneapi::dal::dbscan::test::dbscan_test</scope><name>derived_t</name></member>
      <member refid="classoneapi_1_1dal_1_1test_1_1engine_1_1crtp__base__algo__fixture_1a98e68b95a18f894c9705226a01f3619c" prot="public" virt="non-virtual"><scope>oneapi::dal::dbscan::test::dbscan_test</scope><name>finalize_compute</name></member>
      <member refid="classoneapi_1_1dal_1_1test_1_1engine_1_1crtp__base__algo__fixture_1af509567b3a24d60f43ac5e68225df6ea" prot="public" virt="non-virtual"><scope>oneapi::dal::dbscan::test::dbscan_test</scope><name>finalize_compute_override</name></member>
      <member refid="classoneapi_1_1dal_1_1test_1_1engine_1_1crtp__algo__fixture_1ab78b4384841a391350222d38a71989ca" prot="public" virt="non-virtual"><scope>oneapi::dal::dbscan::test::dbscan_test</scope><name>finalize_compute_via_spmd_threads</name></member>
      <member refid="classoneapi_1_1dal_1_1test_1_1engine_1_1crtp__algo__fixture_1a91ee6fceea739e3b3dde9a295f84fbbf" prot="public" virt="non-virtual"><scope>oneapi::dal::dbscan::test::dbscan_test</scope><name>finalize_compute_via_spmd_threads_and_merge</name></member>
      <member refid="classoneapi_1_1dal_1_1test_1_1engine_1_1crtp__base__algo__fixture_1a1ddff1057e1c77615717643fabd710da" prot="public" virt="non-virtual"><scope>oneapi::dal::dbscan::test::dbscan_test</scope><name>finalize_train</name></member>
      <member refid="classoneapi_1_1dal_1_1test_1_1engine_1_1crtp__base__algo__fixture_1ab63fb783388a7caab10158bbe1c4f320" prot="public" virt="non-virtual"><scope>oneapi::dal::dbscan::test::dbscan_test</scope><name>finalize_train_override</name></member>
      <member refid="classoneapi_1_1dal_1_1test_1_1engine_1_1crtp__algo__fixture_1a9fb19ae9f8ecaf3c4e521391fb560bde" prot="public" virt="non-virtual"><scope>oneapi::dal::dbscan::test::dbscan_test</scope><name>finalize_train_via_spmd_threads</name></member>
      <member refid="classoneapi_1_1dal_1_1test_1_1engine_1_1crtp__algo__fixture_1a6f7983b21f53d22485e6fef1af3bbf92" prot="public" virt="non-virtual"><scope>oneapi::dal::dbscan::test::dbscan_test</scope><name>finalize_train_via_spmd_threads_and_merge</name></member>
      <member refid="classoneapi_1_1dal_1_1dbscan_1_1test_1_1dbscan__test_1ac326cc316db45ea7e8a439c7b06c4cb1" prot="public" virt="non-virtual"><scope>oneapi::dal::dbscan::test::dbscan_test</scope><name>float_t</name></member>
      <member refid="classoneapi_1_1dal_1_1dbscan_1_1test_1_1dbscan__test_1a89f1ca26cd41848ef59951457d04e4dc" prot="public" virt="non-virtual"><scope>oneapi::dal::dbscan::test::dbscan_test</scope><name>get_descriptor</name></member>
      <member refid="classoneapi_1_1dal_1_1test_1_1engine_1_1float__algo__fixture_1a6be1d4cc18b35cecc28a4883638e9204" prot="public" virt="non-virtual"><scope>oneapi::dal::dbscan::test::dbscan_test</scope><name>get_homogen_table_id</name></member>
      <member refid="classoneapi_1_1dal_1_1test_1_1engine_1_1policy__fixture_1ad5b4f390efae39c68f92df90353b5ca8" prot="public" virt="non-virtual"><scope>oneapi::dal::dbscan::test::dbscan_test</scope><name>get_policy</name></member>
      <member refid="classoneapi_1_1dal_1_1test_1_1engine_1_1policy__fixture_1a2db053a584a93e0d852f86ee02750992" prot="public" virt="non-virtual"><scope>oneapi::dal::dbscan::test::dbscan_test</scope><name>get_queue</name></member>
      <member refid="classoneapi_1_1dal_1_1test_1_1engine_1_1crtp__base__algo__fixture_1a1769a758869aeeed2df2d90ad6c5bd7b" prot="public" virt="non-virtual"><scope>oneapi::dal::dbscan::test::dbscan_test</scope><name>infer</name></member>
      <member refid="classoneapi_1_1dal_1_1test_1_1engine_1_1crtp__base__algo__fixture_1a99902a786318586ae7135865bd37504a" prot="public" virt="non-virtual"><scope>oneapi::dal::dbscan::test::dbscan_test</scope><name>infer_override</name></member>
      <member refid="classoneapi_1_1dal_1_1test_1_1engine_1_1crtp__algo__fixture_1afa99ce660b78dc6381d265d6bc5c0ac4" prot="public" virt="non-virtual"><scope>oneapi::dal::dbscan::test::dbscan_test</scope><name>infer_via_spmd_threads</name></member>
      <member refid="classoneapi_1_1dal_1_1test_1_1engine_1_1crtp__algo__fixture_1aab4216cdc871583a7ae486c5a3cbf34f" prot="public" virt="non-virtual"><scope>oneapi::dal::dbscan::test::dbscan_test</scope><name>infer_via_spmd_threads_and_merge</name></member>
      <member refid="classoneapi_1_1dal_1_1dbscan_1_1test_1_1dbscan__test_1ab650da17e790a333e1028a6eeaecee6e" prot="public" virt="non-virtual"><scope>oneapi::dal::dbscan::test::dbscan_test</scope><name>input_t</name></member>
      <member refid="classoneapi_1_1dal_1_1test_1_1engine_1_1crtp__base__algo__fixture_1a163bd2487ff1fd422798cd3bd9fbbdb1" prot="public" virt="non-virtual"><scope>oneapi::dal::dbscan::test::dbscan_test</scope><name>merge_compute_result</name></member>
      <member refid="classoneapi_1_1dal_1_1test_1_1engine_1_1crtp__base__algo__fixture_1af0c5aa299637b51f9f770fd5318149f2" prot="public" virt="non-virtual"><scope>oneapi::dal::dbscan::test::dbscan_test</scope><name>merge_compute_result_override</name></member>
      <member refid="classoneapi_1_1dal_1_1test_1_1engine_1_1crtp__base__algo__fixture_1a14cc53d7c932692aa33e4ddff6937437" prot="public" virt="non-virtual"><scope>oneapi::dal::dbscan::test::dbscan_test</scope><name>merge_finalize_compute_result</name></member>
      <member refid="classoneapi_1_1dal_1_1test_1_1engine_1_1crtp__base__algo__fixture_1a3411c600dcc18c2fcff5930e43474ed9" prot="public" virt="non-virtual"><scope>oneapi::dal::dbscan::test::dbscan_test</scope><name>merge_finalize_compute_result_override</name></member>
      <member refid="classoneapi_1_1dal_1_1test_1_1engine_1_1crtp__base__algo__fixture_1aab5e6e48d85bec4329368ff5ab783234" prot="public" virt="non-virtual"><scope>oneapi::dal::dbscan::test::dbscan_test</scope><name>merge_finalize_train_result</name></member>
      <member refid="classoneapi_1_1dal_1_1test_1_1engine_1_1crtp__base__algo__fixture_1aa7f33d78b74650dd71d9512e5e6213ae" prot="public" virt="non-virtual"><scope>oneapi::dal::dbscan::test::dbscan_test</scope><name>merge_infer_result</name></member>
      <member refid="classoneapi_1_1dal_1_1test_1_1engine_1_1crtp__base__algo__fixture_1a46370c114f72f7cbf3e12022f1e8ea94" prot="public" virt="non-virtual"><scope>oneapi::dal::dbscan::test::dbscan_test</scope><name>merge_infer_result_override</name></member>
      <member refid="classoneapi_1_1dal_1_1test_1_1engine_1_1crtp__base__algo__fixture_1a928e7542d7a3f0bdb9bf71ec1fac1314" prot="public" virt="non-virtual"><scope>oneapi::dal::dbscan::test::dbscan_test</scope><name>merge_train_result</name></member>
      <member refid="classoneapi_1_1dal_1_1test_1_1engine_1_1crtp__base__algo__fixture_1a96895ee7ca7beb657d42d7f44cc0e505" prot="public" virt="non-virtual"><scope>oneapi::dal::dbscan::test::dbscan_test</scope><name>merge_train_result_override</name></member>
      <member refid="classoneapi_1_1dal_1_1dbscan_1_1test_1_1dbscan__test_1a8f837853131c68aace349d86d5190e55" prot="public" virt="non-virtual"><scope>oneapi::dal::dbscan::test::dbscan_test</scope><name>method_t</name></member>
      <member refid="classoneapi_1_1dal_1_1dbscan_1_1test_1_1dbscan__test_1a18f70a1480fa7451217594df74fdf690" prot="public" virt="non-virtual"><scope>oneapi::dal::dbscan::test::dbscan_test</scope><name>mode_checks</name></member>
      <member refid="classoneapi_1_1dal_1_1test_1_1engine_1_1float__algo__fixture_1a7ae0ebe89b0dc86c3febaead54efdd44" prot="public" virt="non-virtual"><scope>oneapi::dal::dbscan::test::dbscan_test</scope><name>not_float64_friendly</name></member>
      <member refid="classoneapi_1_1dal_1_1test_1_1engine_1_1crtp__base__algo__fixture_1ac3c45f1572b279a5d6f74a6548d0a104" prot="public" virt="non-virtual"><scope>oneapi::dal::dbscan::test::dbscan_test</scope><name>partial_compute</name></member>
      <member refid="classoneapi_1_1dal_1_1test_1_1engine_1_1crtp__base__algo__fixture_1a8d74106df88dca7a52c1e0efd268617e" prot="public" virt="non-virtual"><scope>oneapi::dal::dbscan::test::dbscan_test</scope><name>partial_compute_override</name></member>
      <member refid="classoneapi_1_1dal_1_1test_1_1engine_1_1crtp__base__algo__fixture_1a6d64f595fca38a8c16bce504ce20b0c2" prot="public" virt="non-virtual"><scope>oneapi::dal::dbscan::test::dbscan_test</scope><name>partial_train</name></member>
      <member refid="classoneapi_1_1dal_1_1test_1_1engine_1_1crtp__base__algo__fixture_1a376eff5b483f54b63c186b7c294fd950" prot="public" virt="non-virtual"><scope>oneapi::dal::dbscan::test::dbscan_test</scope><name>partial_train_override</name></member>
      <member refid="classoneapi_1_1dal_1_1test_1_1engine_1_1algo__fixture_1afcb54598e7c58188a35c3eb79d54bed4" prot="public" virt="non-virtual"><scope>oneapi::dal::dbscan::test::dbscan_test</scope><name>partial_train_with_parameters</name></member>
      <member refid="classoneapi_1_1dal_1_1dbscan_1_1test_1_1dbscan__test_1aa2ef2eee28c48db0ae4cbc96c1d95790" prot="public" virt="non-virtual"><scope>oneapi::dal::dbscan::test::dbscan_test</scope><name>result_t</name></member>
      <member refid="classoneapi_1_1dal_1_1dbscan_1_1test_1_1dbscan__test_1a9b68b945cc51f64666f613cf916a535d" prot="public" virt="non-virtual"><scope>oneapi::dal::dbscan::test::dbscan_test</scope><name>run_checks</name></member>
      <member refid="classoneapi_1_1dal_1_1test_1_1engine_1_1crtp__base__algo__fixture_1a815bc11016e94bfc56362972bf4899c3" prot="public" virt="non-virtual"><scope>oneapi::dal::dbscan::test::dbscan_test</scope><name>split_compute_input</name></member>
      <member refid="classoneapi_1_1dal_1_1test_1_1engine_1_1crtp__base__algo__fixture_1a681ab37ab9bbb635dfda6c3e32093216" prot="public" virt="non-virtual"><scope>oneapi::dal::dbscan::test::dbscan_test</scope><name>split_compute_input_override</name></member>
      <member refid="classoneapi_1_1dal_1_1test_1_1engine_1_1crtp__base__algo__fixture_1a59f28edc3d1d2dc30eae5d23c2f6ced0" prot="public" virt="non-virtual"><scope>oneapi::dal::dbscan::test::dbscan_test</scope><name>split_finalize_compute_input</name></member>
      <member refid="classoneapi_1_1dal_1_1test_1_1engine_1_1crtp__base__algo__fixture_1a4a3cdda7f9b045718e8119c1130d96b7" prot="public" virt="non-virtual"><scope>oneapi::dal::dbscan::test::dbscan_test</scope><name>split_finalize_compute_input_override</name></member>
      <member refid="classoneapi_1_1dal_1_1test_1_1engine_1_1crtp__base__algo__fixture_1ae8f43835cbbdafdfd1006ac4bcf1b002" prot="public" virt="non-virtual"><scope>oneapi::dal::dbscan::test::dbscan_test</scope><name>split_finalize_train_input</name></member>
      <member refid="classoneapi_1_1dal_1_1test_1_1engine_1_1crtp__base__algo__fixture_1a15b054f68d10cca541ef19f3c93aedc9" prot="public" virt="non-virtual"><scope>oneapi::dal::dbscan::test::dbscan_test</scope><name>split_infer_input</name></member>
      <member refid="classoneapi_1_1dal_1_1test_1_1engine_1_1crtp__base__algo__fixture_1a3be0322fad50f3ff364db8673245e6e9" prot="public" virt="non-virtual"><scope>oneapi::dal::dbscan::test::dbscan_test</scope><name>split_infer_input_override</name></member>
      <member refid="classoneapi_1_1dal_1_1test_1_1engine_1_1crtp__base__algo__fixture_1a817835eeb02cc5122cc38408d5f46c14" prot="public" virt="non-virtual"><scope>oneapi::dal::dbscan::test::dbscan_test</scope><name>split_train_input</name></member>
      <member refid="classoneapi_1_1dal_1_1test_1_1engine_1_1crtp__base__algo__fixture_1abc343e4dec6108c883424787bf6ca4e6" prot="public" virt="non-virtual"><scope>oneapi::dal::dbscan::test::dbscan_test</scope><name>split_train_input_override</name></member>
      <member refid="classoneapi_1_1dal_1_1test_1_1engine_1_1crtp__base__algo__fixture_1a78b584fe4368d4320992381407f46b5c" prot="public" virt="non-virtual"><scope>oneapi::dal::dbscan::test::dbscan_test</scope><name>train</name></member>
      <member refid="classoneapi_1_1dal_1_1test_1_1engine_1_1crtp__base__algo__fixture_1ae66f1418bb3c5e55678da710125bebef" prot="public" virt="non-virtual"><scope>oneapi::dal::dbscan::test::dbscan_test</scope><name>train_override</name></member>
      <member refid="classoneapi_1_1dal_1_1test_1_1engine_1_1crtp__algo__fixture_1a3bc6bb64c716348cea45a78f281843be" prot="public" virt="non-virtual"><scope>oneapi::dal::dbscan::test::dbscan_test</scope><name>train_via_spmd_threads</name></member>
      <member refid="classoneapi_1_1dal_1_1test_1_1engine_1_1crtp__algo__fixture_1a9fc841dae09ff56d51ecdeeb678139dd" prot="public" virt="non-virtual"><scope>oneapi::dal::dbscan::test::dbscan_test</scope><name>train_via_spmd_threads_and_merge</name></member>
      <member refid="classoneapi_1_1dal_1_1test_1_1engine_1_1algo__fixture_1a596f6a2f2ffff25aa8ffa9b4151f7257" prot="public" virt="non-virtual"><scope>oneapi::dal::dbscan::test::dbscan_test</scope><name>train_with_parameters</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
